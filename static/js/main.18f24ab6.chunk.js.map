{"version":3,"sources":["n2-faetures/f1-auth/a1-login/l1-ui/LoginForm/LoginForm.module.css","n1-main/m1-ui/common/Checkbox/Checkbox.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/Preloader/Preloader.module.css","n1-main/m1-ui/assets/images/loader.svg","n1-main/m1-ui/profile/Profile.module.css","n2-faetures/f1-auth/a2-register/r1-ui/Preloader/Spin-1s.svg","n1-main/m1-ui/Packs/PacksPage.module.css","n2-faetures/f2-cardPacks/c2-cards/c1-ui/Cards.module.css","n1-main/m1-ui/common/Cards/Slider/Slider.module.css","n1-main/m1-ui/learnPage/LearnPage.module.css","n2-faetures/f3-learnCards/l1-selectedCard/s1-ui/SelectedCardContainer.module.css","n0-config/config.ts","n2-faetures/f1-auth/a1-login/l3-dal/cards-api.ts","n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer.ts","n1-main/m2-bll/app-reducer.tsx","n1-main/m1-ui/common/Preloader/Preloader.tsx","n1-main/m1-ui/profile/Profile.tsx","n2-faetures/f1-auth/a1-login/l1-ui/LoginForm/Login.tsx","n2-faetures/f1-auth/a1-login/l1-ui/LoginForm/LoginFormContainer.tsx","n2-faetures/f1-auth/a1-login/l1-ui/LoginPage.tsx","n1-main/m1-ui/login/Login.tsx","n2-faetures/f1-auth/a2-register/r3-dal/cards-reduser-api.ts","n2-faetures/f1-auth/a2-register/r2-bll/register-reducer.ts","n2-faetures/f1-auth/a2-register/r1-ui/Preloader/Preloader.tsx","n2-faetures/f1-auth/a2-register/r1-ui/RegisterPage.tsx","n2-faetures/f1-auth/a3-recovery/rec3-dal/recoveryApi.ts","n2-faetures/f1-auth/a3-recovery/rec2-bll/recover-password-reducer.ts","n2-faetures/f1-auth/a3-recovery/rec1-ui/RecoverPasswordPage/RecoverPasswordPage.tsx","n1-main/m1-ui/newPassword/NewPass.tsx","n2-faetures/f2-cardPacks/c1-packs/p3-dal/packs-api.ts","n2-faetures/f2-cardPacks/c1-packs/p2-bll/packs-reducer.ts","n1-main/m1-ui/common/Modal/CustomModal.tsx","n2-faetures/f2-cardPacks/c1-packs/p1-ui/PacksTable.tsx","n1-main/m1-ui/common/Checkbox/Checkbox.tsx","n2-faetures/f2-cardPacks/c1-packs/p1-ui/PacksContainer.tsx","n1-main/m1-ui/Packs/PacksPage.tsx","n2-faetures/f2-cardPacks/c2-cards/c3-dal/cards-api.ts","n2-faetures/f2-cardPacks/c2-cards/c2-bll/cards-reduser.ts","n2-faetures/f2-cardPacks/c2-cards/c1-ui/Cards.tsx","n1-main/m1-ui/common/Cards/Slider/Slider.tsx","n1-main/m1-ui/CardsPage/CardsPage.tsx","n1-main/m1-ui/common/Button/ButtonString.tsx","n2-faetures/f3-learnCards/l1-selectedCard/s1-ui/FrontPartCard/FrontPartCard.tsx","n1-main/m1-ui/common/Button/Button.tsx","n2-faetures/f3-learnCards/l1-selectedCard/s1-ui/BackPartCard/BackPartCard.tsx","n2-faetures/f3-learnCards/l1-selectedCard/s3-dal/selectCard-api.ts","n2-faetures/f3-learnCards/l1-selectedCard/s2-bll/selectCard-reducer.ts","n2-faetures/f3-learnCards/l1-selectedCard/s1-ui/SelectedCardContainer.tsx","n1-main/m1-ui/learnPage/LearnPage.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/main/Main.tsx","n1-main/m1-ui/App.tsx","serviceWorker.ts","n1-main/m2-bll/profile-reducer.ts","n1-main/m2-bll/login-reducer.ts","n1-main/m2-bll/newPassword-reducer.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/common/Button/Button.module.css"],"names":["module","exports","BACK_URL","instanse","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","user","isLoggedIn","error","setIsLoginInAC","value","type","setUserAC","setAppErrorAC","status","isInitialized","setAppStatusAC","Preloader","props","className","styles","loader","src","preloader","Profile","React","memo","useSelector","state","auth","app","dispatch","useDispatch","useEffect","_id","then","res","catch","container","email","token","publicCardPacksCount","to","Login","formik","useFormik","initialValues","password","rememberMe","validate","values","errors","length","test","onSubmit","e","response","message","Grid","justify","item","xs","style","color","toString","handleSubmit","FormControl","FormGroup","TextField","label","margin","getFieldProps","FormControlLabel","control","Checkbox","checked","Button","variant","link","RECOVER_PASSWORD","activeClassName","activeLick","REGISTRATION","LoginFormContainer","LoginPage","instance","RegistrationApi","isRegistered","isError","isFetching","setFetchingAC","alt","Registration","registration","err","registerTC","id","name","onChange","handleChange","onBlur","handleBlur","htmlFor","touched","disabled","RecoverApi","from","SET_ACCEPTED","isAccepted","recoverTC","RecoverPasswordPage","recoverPassword","NewPass","packsAPI","pageCount","get","params","x","cardPacks","cardsPack","newCardsPack","deletedCardsPack","put","cardsCount","created","grade","more_id","path","private","rating","shots","updated","user_id","user_name","__v","deckCover","cardPacksTotalCount","maxCardsCount","minCardsCount","page","tokenDeathTime","currentModal","currentPackValues","setModalT","modal","setModalAC","useStyles","makeStyles","theme","createStyles","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","CustomModal","showModal","heading","callback","fields","isEditFields","isClientError","packId","isServerError","forEach","title","console","log","classes","useState","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","map","onClick","PacksTable","displayModal","packs","addPack","deletePack","goToCards","updatePacks","onAddPackHandler","onUpdatePackHandler","showLearnCard","Name","columns","field","headerStyle","width","cellStyle","textAlign","actions","icon","tooltip","event","isFreeAction","options","actionsColumnIndex","optionInput","radio","checkboxValue","changeValue","currentTarget","PacksContainer","history","useHistory","useCallback","pack","Array","isArray","push","LEARN","CARDS","nameObj","deletePackAC","updateObj","payload","setCurrentPackValuesAC","PacksPage","bodyTable","CardsApi","cardsPack_id","cardAnswer","cardQuestion","min","max","shortCards","question","answer","answerImg","questionImg","questionVideo","answerVideo","card","comments","cards","currentCardValues","setErrorAC","setCardsTC","toggleModalTC","currentModalAC","CardsTable","buttonContainer","cardsPackId","cardsPackIdParams","location","pathname","substring","onCardAdd","getState","undefined","addCardTC","onCardUpdate","cardId","updateCardTC","onCardDelete","cardsForDisplay","url","cardPack_id","Question","Answer","setCurrentCardValuesAC","onUpdateCardHandler","CustomSlider","defaultValue","orientation","step","valueLabelDisplay","sliderValue","setSliderValue","Slider","newValue","CardsPage","ButtonString","red","click","button","FrontPartCard","onCheck","frontCardBody","grades","BackPartCard","onNext","index","key","cardAPI","card_id","updatedGrade","addNewCardTC","ActionsTypeAC","getCard","sum","reduce","acc","rand","Math","random","i","newSum","SelectedCardContainer","learnCard","store","useParams","isChecked","setIsChecked","first","setFirst","stales","cardBody","updateCardGradeTC","LearnPage","Routes","exact","render","Header","logoutHandler","nav","menu","Main","App","Boolean","window","hostname","match","rootReducer","combineReducers","action","newPassword","login","profile","filter","p","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,WAAa,8BAA8B,WAAa,8BAA8B,cAAgB,iCAAiC,KAAO,0B,oBCAhKD,EAAOC,QAAU,CAAC,YAAc,8BAA8B,aAAa,6BAA6B,MAAQ,0B,mBCAhHD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,WAAa,6B,oBCAjJD,EAAOC,QAAU,CAAC,OAAS,4B,oBCD3BD,EAAOC,QAAU,IAA0B,oC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,6B,oBCD9BD,EAAOC,QAAU,IAA0B,qC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,gBAAkB,iC,oBCApCD,EAAOC,QAAU,CAAC,UAAY,4B,oBCA9BD,EAAOC,QAAU,CAAC,SAAW,8B,oBCA7BD,EAAOC,QAAU,CAAC,SAAW,0C,uQCChBC,EAAW,sCCClBC,EAAWC,IAAMC,OAAO,CAC1BC,QAASJ,EACTK,iBAAiB,IAGRC,EAAU,SACbC,GACF,OAAON,EAASO,KAAe,aAAcD,IAFxCD,EAAU,WAKf,OAAOL,EAASQ,OAAyB,YALpCH,EAAU,WAQf,OAAOL,EAASO,KAAe,YCRjCE,EAAe,CACjBC,KAAM,GACNC,YAAY,EACZC,MAAO,MAiBEC,EAAiB,SAACC,GAAD,MACzB,CAACC,KAzBmB,yBAyBKD,UACjBE,EAAY,SAACN,GAAD,MACpB,CAACK,KA1BW,iBA0BKL,SACTO,EAAgB,SAACL,GAAD,MACxB,CAACG,KA3BY,kBA2BKH,UCzBjBH,EAAe,CACjBS,OAAQ,OACRN,MAAO,KACPO,eAAe,GAgBNC,EAAiB,SAACF,GAAD,MAAgC,CAACH,KAvB5C,iBAuB8DG,W,oCCrBpEG,EAA0C,SAACC,GACpD,OACI,yBAAKC,UAAWC,IAAOC,QACnB,yBAAKC,IAAKC,Q,kBCDTC,EAAUC,IAAMC,MAAK,WAE9B,IAAMnB,EAAaoB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKtB,cACxEO,EAASa,aAAiD,SAAAC,GAAK,OAAIA,EAAME,IAAIhB,UAC/ER,EAAOqB,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAKvB,QAC5DyB,EAAWC,cASjB,OAPAC,qBAAU,WACF3B,EAAK4B,KAAQ3B,GACbwB,GFeyB,SAACA,GAClCA,EAASf,EAAe,YACxBf,IACKkC,MAAK,SAAAC,GACEA,EAAIlC,MACJ6B,EAASnB,EAAUwB,EAAIlC,OACvB6B,EAAStB,GAAe,IACxBsB,EAASf,EAAe,gBAExBe,EAAStB,GAAe,IACxBsB,EAASf,EAAe,eAE5Be,EAfsD,CAACpB,KAvBxC,yBAuBkEI,eAejD,IAChCgB,EAASf,EAAe,iBAE3BqB,OAAM,WACHN,EAASf,EAAe,sBE7B7B,CAACe,IAGW,SAAXjB,GAAgC,YAAXA,EACd,6BACH,kBAAC,EAAD,OAGHP,EAKD,yBAAKY,UAAWC,IAAOkB,WACnB,uCACA,uCAAahC,EAAKiC,MAAlB,KACA,uCAAajC,EAAKkC,OAClB,sDAA4BlC,EAAKmC,uBAR9B,kBAAC,IAAD,CAAUC,GAAI,c,yFCThBC,EAAQlB,IAAMC,MAAK,WAE5B,IAAMlB,EAAQmB,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,KAAKrB,SACzEM,EAASa,aAAiD,SAAAC,GAAK,OAAIA,EAAME,IAAIhB,UAC7EP,EAAaoB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKtB,cACvEwB,EAAWC,cAEZY,EAASC,YAAU,CACrBC,cAAe,CACXP,MAAO,GACPQ,SAAU,GACVC,YAAY,GAEhBC,SAAU,SAACC,GACP,IAAMC,EAA0B,GAWhC,OAVKD,EAAOH,SAEDG,EAAOH,SAASK,QAAU,IACjCD,EAAOJ,SAAW,2CAFlBI,EAAOJ,SAAW,WAIjBG,EAAOX,MAEA,4CAA4Cc,KAAKH,EAAOX,SAChEY,EAAOZ,MAAQ,yBAFfY,EAAOZ,MAAQ,WAIZY,GAEXG,SAAU,SAAAJ,GJVK,IAAChD,EIWR6B,GJXQ7B,EIWSgD,EJXiB,SAACnB,GAC/CA,EAASf,EAAe,YACxBf,EAAcC,GACTiC,MAAK,SAACC,GACCA,EAAIlC,MACJ6B,EAASnB,EAAUwB,EAAIlC,OACvB6B,EAAStB,GAAe,IACxBsB,EAASf,EAAe,gBAExBe,EAASlB,EAAc,UACvBkB,EAASf,EAAe,kBAG/BqB,OAAM,SAACkB,GACJxB,EAASlB,EAAc0C,EAAEC,SAAYD,EAAEC,SAAStD,KAAKM,MAAU+C,EAAEE,QAAU,kCAC3E1B,EAASf,EAAe,uBIAhC,MAAe,YAAXF,EACO,kBAAC,EAAD,MAEPP,EACO,kBAAC,IAAD,CAAUmC,GAAI,MAGlB,kBAACgB,EAAA,EAAD,CAAMpB,WAAS,EAACqB,QAAQ,UAC3B,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACVrD,GAAS,yBAAKsD,MAAO,CAACC,MAAO,QAASvD,EAAMwD,YAC7C,0BAAMV,SAAUV,EAAOqB,cACnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACIC,MAAM,QACNC,OAAO,UACH1B,EAAO2B,cAAc,WAE5B3B,EAAOO,OAAOZ,MAAQ,yBAAKuB,MAAO,CAACC,MAAO,QAASnB,EAAOO,OAAOZ,OAAe,KACjF,kBAAC6B,EAAA,EAAD,eACIzD,KAAK,WACL0D,MAAM,WACNC,OAAO,UACH1B,EAAO2B,cAAc,cAE5B3B,EAAOO,OAAOJ,SAAW,yBAAKe,MAAO,CAACC,MAAO,QAASnB,EAAOO,OAAOJ,UAAkB,KACvF,kBAACyB,EAAA,EAAD,CACIH,MAAO,cACPI,QAAS,kBAACC,EAAA,EAAD,iBACD9B,EAAO2B,cAAc,cADpB,CAELI,QAAS/B,EAAOM,OAAOF,gBAG/B,kBAAC4B,EAAA,EAAD,CAAQjE,KAAM,SAAUkE,QAAS,YAAad,MAAO,WAArD,YAIZ,yBAAK5C,UAAW2C,IAAMgB,MAClB,kBAAC,IAAD,CAASpC,GAAIqC,GAAkBC,gBAAiB5D,IAAO6D,YAAvD,oBAEJ,yBAAK9D,UAAW2C,IAAMgB,MAClB,kBAAC,IAAD,CAASpC,GAAIwC,GAAcF,gBAAiB5D,IAAO6D,YAAnD,kBCzFHE,EAAqB1D,IAAMC,MAAK,WAGzC,OACI,6BACI,kBAACiB,EAAD,UCLCyC,EAAY3D,IAAMC,MAAK,WAChC,OACI,6BACI,kBAACyD,EAAD,UCHCxC,EAAQlB,IAAMC,MAAK,WAC5B,OACI,6BACG,qCACC,kBAAC0D,EAAD,UCLNC,EAAWxF,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IAGRsF,EAAkB,SAClB/C,EAAeQ,GACpB,OAAOsC,EAASlF,KAAT,gBAA+B,CAClCoC,QACAQ,cCJN1C,EAAe,CACjBkF,cAAc,EACdC,SAAS,EACTC,YAAY,GA6BVC,EAAgB,SAACD,GAAD,MAA0B,CAAC9E,KAlCZ,eAkCgC8E,e,kBCnCxDxE,GAAsB,WAC/B,OAAO,6BACH,yBAAKK,IAAKC,IAAWoE,IAAK,gBCG5B1C,GAAW,SAACC,GACd,IAAMC,EAAc,GAgBpB,OAdKD,EAAOX,MAEA,4CAA4Cc,KAAKH,EAAOX,SAChEY,EAAOZ,MAAQ,yBAFfY,EAAOZ,MAAQ,WAKdW,EAAOH,SAEDG,EAAOH,SAASK,QAAU,EACjCD,EAAOJ,SAAW,gCACXG,EAAOH,SAASK,OAAS,MAChCD,EAAOJ,SAAW,wCAJlBI,EAAOJ,SAAW,WAOfI,GAKEyC,GAAenE,IAAMC,MAAK,WAEnC,IAAMK,EAAWC,cACXwD,EAAU7D,aAA8B,SAAAC,GAAK,OAAIA,EAAMiE,aAAaL,WACpED,EAAe5D,aAA8B,SAAAC,GAAK,OAAIA,EAAMiE,aAAaN,gBACzEE,EAAa9D,aAA8B,SAAAC,GAAK,OAAIA,EAAMiE,aAAaJ,cAEvE7C,EAASC,YAAU,CACrBC,cAAe,CACXP,MAAO,GACPQ,SAAU,IAEdE,YACAK,SAAU,SAAAJ,GAAW,IACVX,EAAmBW,EAAnBX,MAAOQ,EAAYG,EAAZH,SACdhB,EFFc,SAACQ,EAAeQ,GAAhB,OAAqC,SAAChB,GAC5DA,EAAS2D,GAAc,IACvBJ,EAAyB/C,EAAOQ,GAAUZ,MAAK,SAAAC,GAC3CL,EAVkD,CAACpB,KAlC9B,WAkC8C4E,cAU3C,IACxBxD,EAAS2D,GAAc,OAExBrD,OAAM,SAAAyD,GACL/D,EAbkC,CAACpB,KAlCZ,YAkC6B6E,SAahC,IACpBzD,EAAS2D,GAAc,QENVK,CAAWxD,EAAOQ,OAInC,OAAG0C,GAAeF,GAAiBC,EAGhCA,IAAYC,EACJ,uCAGRF,IAAiBE,EACT,kBAAC,IAAD,CAAU/C,GAAI,UAIrB,6BACI,4CACA,0BAAMY,SAAUV,EAAOqB,cACnB,4BACI,4BAAI,2BACA+B,GAAG,QACHC,KAAK,QACLtF,KAAK,QACLuF,SAAUtD,EAAOuD,aACjBC,OAAQxD,EAAOyD,WACf3F,MAAOkC,EAAOM,OAAOX,QANzB,IAOG,2BAAO+D,QAAQ,SAAf,iBACE1D,EAAO2D,QAAQhE,OAASK,EAAOO,OAAOZ,MACnC,6BAAMK,EAAOO,OAAOZ,OACpB,MAER,4BAAI,2BACAyD,GAAG,WACHC,KAAK,WACLtF,KAAK,WACLuF,SAAUtD,EAAOuD,aACjBC,OAAQxD,EAAOyD,WACf3F,MAAOkC,EAAOM,OAAOH,WANzB,IAOG,2BAAOuD,QAAQ,YAAf,YACE1D,EAAO2D,QAAQxD,UAAYH,EAAOO,OAAOJ,SACtC,6BAAMH,EAAOO,OAAOJ,UACpB,OAGZ,4BAAQpC,KAAK,SAAS6F,WAAYf,GAAlC,YAxCD,kBAAC,GAAD,SChDTJ,GAAWxF,IAAMC,OAAO,CAC1BC,QAASJ,EACTK,iBAAiB,IAGRyG,GAAa,SACdlE,GACJ,OAAO8C,GAASlF,KAAT,cAA6B,CAChCoC,QACAmE,KAAK,qCACLjD,QAAQ,0MCVdkD,GAAgD,gCAIhDtG,GAAe,CACjBuG,YAAY,EACZpB,SAAS,EACTC,YAAY,GA6BVC,GAAgB,SAACD,GAAD,MAA0B,CAAC9E,KAlCK,gCAkCe8E,eAKxDoB,GAAY,SAACtE,GAAD,OAAmB,SAACR,GACzCA,EAAS2D,IAAc,IACvBe,GAAmBlE,GAAOJ,MAAK,SAAAC,GAC3BL,EAV+C,CAACpB,KAAMgG,GAAcC,YAU7C,IACvB7E,EAAS2D,IAAc,OAExBrD,OAAM,SAAAyD,GACL/D,EAbkC,CAACpB,KAlCK,6BAkCY6E,SAahC,IACpBzD,EAAS2D,IAAc,SCzCzBzC,GAAW,SAACC,GACd,IAAMC,EAAc,GAOpB,OALKD,EAAOX,MAEA,4CAA4Cc,KAAKH,EAAOX,SAChEY,EAAOZ,MAAQ,yBAFfY,EAAOZ,MAAQ,WAIZY,GAIE2D,GAAsBpF,gBAAK,WAEpC,IAAMK,EAAWC,cACXwD,EAAU7D,aAA8B,SAAAC,GAAK,OAAIA,EAAMmF,gBAAgBvB,WACvEC,EAAa9D,aAA8B,SAAAC,GAAK,OAAIA,EAAMmF,gBAAgBtB,cAC1EmB,EAAajF,aAA8B,SAAAC,GAAK,OAAIA,EAAMmF,gBAAgBH,cAE1EhE,EAASC,YAAU,CACrBC,cAAe,CACXP,MAAO,IAEXU,YACAK,SAAU,SAAAJ,GAAW,IACVX,EAASW,EAATX,MACPR,EAAS8E,GAAUtE,OAI3B,OAAGkD,GAAemB,GAAepB,EAG9BA,IAAYC,EACJ,uCAGRmB,IAAenB,EACP,kBAAC,IAAD,CAAU/C,GAAI,YAIjB,oCACI,gDACA,0BAAMY,SAAUV,EAAOqB,cACnB,4BACI,4BAAI,2BACA+B,GAAG,QACHC,KAAK,QACLtF,KAAK,QACLuF,SAAUtD,EAAOuD,aACjBC,OAAQxD,EAAOyD,WACf3F,MAAOkC,EAAOM,OAAOX,QANzB,IAOG,2BAAO+D,QAAQ,SAAf,iBACE1D,EAAO2D,QAAQhE,OAASK,EAAOO,OAAOZ,MACnC,6BAAMK,EAAOO,OAAOZ,OACpB,OAGZ,4BAAQ5B,KAAK,SAAS6F,WAAYf,GAAlC,YA5BL,kBAAC,GAAD,SCxCFuB,GAAUvF,IAAMC,MAAK,WAC9B,OACI,6BACI,+C,+BCDN9B,GAAWC,IAAMC,OAAO,CAC1BC,QAASJ,EACTK,iBAAiB,IAGRiH,GAAW,WACgB,IAA3BC,EAA0B,uDAAN,IACzB,OAAOtH,GAASuH,IAAT,+BAA4DD,GAAa,CAACE,OAAQ,CAACC,EAAG,KACxFlF,MAAK,SAAAC,GAAG,OAAIA,EAAIlC,KAAKoH,cAHrBL,GAAW,SAKTM,GACP,OAAO3H,GAASO,KAAT,aAA4C,CAACoH,cAC/CpF,MAAK,SAAAC,GAAG,OAAIA,EAAIlC,KAAKsH,iBAPrBP,GAAW,SASTjB,GACP,OAAOpG,GAASQ,OAAT,wBAAiD4F,IACnD7D,MAAK,SAAAC,GAAG,OAAIA,EAAIlC,KAAKuH,qBAXrBR,GAAW,SAaTM,GACP,OAAO3H,GAAS8H,IAAT,aAA2C,CAACH,cAC9CpF,MAAK,SAAAC,GAAG,OAAIA,EAAIlC,SCbvBG,GAAsC,CACxCiH,UAAW,CACP,CACIK,WAAY,EACZC,QAAS,2BACTC,MAAO,EACPC,QAAS,2BACT7B,KAAM,WACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,2BACXC,IAAK,EACLpG,IAAK,4BAET,CACIyF,WAAY,EACZC,QAAS,2BACTC,MAAO,EACPC,QAAS,2BACT7B,KAAM,WACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,2BACXC,IAAK,EACLpG,IAAK,4BAET,CACIyF,WAAY,EACZC,QAAS,2BACTC,MAAO,EACPC,QAAS,2BACT7B,KAAM,WACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,2BACXC,IAAK,EACLpG,IAAK,4BAET,CACIyF,WAAY,EACZC,QAAS,2BACTW,UAAW,GACXV,MAAO,EACPC,QAAS,2BACT7B,KAAM,sBACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,MACXC,IAAK,EACLpG,IAAK,4BAET,CACIyF,WAAY,EACZC,QAAS,2BACTW,UAAW,KACXV,MAAO,EACPC,QAAS,2BACT7B,KAAM,mBACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,yBACXC,IAAK,EACLpG,IAAK,4BAET,CACIyF,WAAY,EACZC,QAAS,2BACTC,MAAO,EACPC,QAAS,2BACT7B,KAAM,UACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,0BACXC,IAAK,EACLpG,IAAK,4BAET,CACIyF,WAAY,EACZC,QAAS,2BACTC,MAAO,EACPC,QAAS,2BACT7B,KAAM,IACN8B,KAAM,OACNC,SAAS,EACTC,OAAQ,EACRC,MAAO,EACPvH,KAAM,OACNwH,QAAS,2BACTC,QAAS,2BACTC,UAAW,MACXC,IAAK,EACLpG,IAAK,6BAGbsG,oBAAqB,IACrBC,cAAe,GACfC,cAAe,EACfC,KAAM,EACNzB,UAAW,IACX1E,MAAO,uCACPoG,eAAgB,cAChBC,aAAc,GACdC,kBAAmB,CACf9C,GAAI,GACJC,KAAM,KA6ED8C,GAAY,SAACC,GAAD,OAAsB,SAACjH,GAC5CA,EA7Be,SAACiH,GAAD,MAAuB,CAACrI,KA1LZ,YA0L6BqI,SA6B/CC,CAAWD,M,iFCrNlBE,GAAYC,cAAW,SAACC,GAAD,OACzBC,aAAa,CACTL,MAAO,CACHM,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,MAAO,CACHC,gBAAiBN,EAAMO,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWV,EAAMW,QAAQ,GACzBC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,SAqB5BC,GAA6B,SAAC,GAIO,IAHHC,EAGE,EAHFA,UAAWC,EAGT,EAHSA,QAASC,EAGlB,EAHkBA,SACpBC,EAEE,EAFFA,OACAC,GACE,EAFMC,cAEN,EADFD,cAA6BE,GAC3B,EADYC,cACZ,EAD2BD,QAElE3H,EAAqB,GAE3BwH,EAAOK,SAAQ,gBAAEC,EAAF,EAAEA,MAAOlK,EAAT,EAASA,MAAT,OAAoBoC,EAAc8H,GAASlK,KAE1D,IAAMkC,EAASC,YAAU,CACrBC,gBACAQ,SAAU,SAAAJ,GACN2H,QAAQC,IAAI5H,GACRmH,IACAI,EAASJ,EAASI,EAAQvH,GAAUA,EAASmH,EAASnH,GAAUmH,QAKtEU,EAAU7B,KAf6B,EAgBrB8B,mBAASb,GAhBY,oBAgBtCc,EAhBsC,KAgBhCC,EAhBgC,KAkBvCC,EAAc,WAChBD,GAAQ,IAGZ,OACI,kBAACE,GAAA,EAAD,CACIC,kBAAgB,yBAChBC,mBAAiB,+BACjBnK,UAAW4J,EAAQ/B,MACnBiC,KAAMA,EACNM,QAASJ,EACTK,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACXC,QAAS,MAGb,kBAACC,GAAA,EAAD,CAAMC,GAAIb,GACN,yBAAK9J,UAAW4J,EAAQtB,OACpB,wBAAIzD,GAAG,0BAA0BoE,GAE/BG,EACE,0BAAMjH,SAAUV,EAAOqB,cAEfqG,EAAOyB,KAAI,gBAAEnB,EAAF,EAAEA,MAAF,EAASlK,MAAT,OAAoB,2BAAG,8BAAOkK,GAAV,IAAwB,8BACnD5E,GAAI4E,EACJ3E,KAAM2E,EACNlK,MAAOkC,EAAOM,OAAO0H,GACrB1E,SAAUtD,EAAOuD,mBAGzB,4BAAQxF,KAAM,SAAUqL,QAASb,GAAjC,SAVSb,EAAOyB,KAAI,gBAAEnB,EAAF,EAAEA,MAAOlK,EAAT,EAASA,MAAT,OAAoB,2BAAG,8BAAOkK,GAAV,IAAyBlK,UCnEhFuL,GAA4C,SAAC,GAC2D,IAK7GC,EANmDC,EACyD,EADzDA,MAAOC,EACkD,EADlDA,QAASC,EACyC,EADzCA,WAAYC,EAC6B,EAD7BA,UAAWC,EACkB,EADlBA,YACxCC,EAA0D,EAA1DA,iBAAkBC,EAAwC,EAAxCA,oBAAqBC,EAAmB,EAAnBA,cAEvF7D,EAAelH,aAA8B,SAAAC,GAAK,OAAIA,EAAMuK,MAAMtD,gBAClEC,EAAoBnH,aAAqD,SAAAC,GAAK,OAAIA,EAAMuK,MAAMrD,qBAGpG,OAAQD,GACJ,IAAK,MACDqD,EAAe,kBAAC,GAAD,CACX9B,QAAS,eACTE,OAAQ,CAAC,CAACM,MAAO,SACjBT,WAAW,EACXI,cAAc,EACdF,SAAU,SAACnH,GAAD,OAAYkJ,EAAQ,CAACnG,KAAM/C,EAAOyJ,UAEhD,MACJ,IAAK,SACDT,EAAe,kBAAC,GAAD,CACX9B,QAAS,cACTE,OAAQ,CAAC,CAACM,MAAO,kBACjBT,WAAW,EACXI,cAAc,IAElB,MACJ,IAAK,QACD2B,EAAe,kBAAC,GAAD,CACX9B,QAAS,SACTE,OAAQ,CAAC,CAACM,MAAO,WACjBT,WAAW,EACXI,cAAc,IAElB,MACJ,IAAK,SACD2B,EAAe,kBAAC,GAAD,CACX9B,QAAS,cACTE,OAAQ,CAAC,CAACM,MAAO,OAAQlK,MAAOoI,EAAkB7C,OAClDwE,OAAQ3B,EAAkB9C,GAC1BmE,WAAW,EACXI,cAAc,EACdF,SAAU,SAACnI,EAAKgB,GAAN,OAAiBqJ,EAAY,CAACrK,MAAK+D,KAAM/C,EAAOyJ,UAE9D,MACJ,QACIT,EAAe,GAEvB,OACI,oCACKA,EACL,kBAAC,KAAD,CACItB,MAAM,YACNgC,QAAS,CACL,CACIhC,MAAO,OAAQiC,MAAO,OACtBC,YAAa,CACTC,MAAO,OAEXC,UAAW,CACPD,MAAO,QAGf,CACInC,MAAO,aAAciC,MAAO,aAAclM,KAAM,UAChDmM,YAAa,CACTG,UAAW,SACXF,MAAO,OAEXC,UAAW,CACPC,UAAW,SACXF,MAAO,QAGf,CACInC,MAAO,UAAWiC,MAAO,UACzBC,YAAa,CACTG,UAAW,SACXF,MAAO,OAEXC,UAAW,CACPC,UAAW,SACXF,MAAO,QAGf,CACInC,MAAO,MAAOiC,MAAO,MAAOlM,KAAM,UAClCmM,YAAa,CACTG,UAAW,SACXF,MAAO,OAEXC,UAAW,CACPC,UAAW,SACXF,MAAO,SAInB7M,KAAMiM,EACNe,QAAS,CACL,CACIC,KAAM,UACNC,QAAS,aACTpB,QAAS,SAACqB,EAAOnN,GACbwM,EAAcxM,KAGtB,CACIiN,KAAM,MACNC,QAAS,WACTE,cAAc,EACdtB,QAAS,SAACqB,GAAD,OAAWb,MAExB,CACIW,KAAM,SACNC,QAAS,cACTpB,QAAS,SAACqB,EAAOnN,GACbuM,EAAoBvM,KAG5B,CACIiN,KAAM,QACNC,QAAS,QACTpB,QAAS,SAACqB,EAAOnN,GACboM,EAAUpM,KAGlB,CACIiN,KAAM,SACNC,QAAS,cACTpB,QAAS,SAACqB,EAAOnN,GACbmM,EAAWnM,MAIvBqN,QAAS,CACLT,YAAa,CACTpD,gBAAiB,UACjB3F,MAAO,QAGXyJ,oBAAqB,GAEzB1J,MAAO,CACHiJ,MAAO,MACPzI,OAAQ,iB,qBCxJXI,GAAwCjD,IAAMC,MAAK,SAACR,GAM7D,OACI,6BACI,2BAAOP,KAAK,WACLQ,UAAS,UAAK2C,KAAM2J,YAAX,YAA0B3J,KAAM4J,OACzC/I,QAASzD,EAAMyM,cACfzH,SATM,SAAC3C,GAClBrC,EAAM0M,YAAYrK,EAAEsK,cAAclJ,gBCM7BmJ,GAAiB,WAG1B,IAAM3B,EAAQxK,aAA+C,SAAAC,GAAK,OAAIA,EAAMuK,MAAM7E,aAC5EvF,EAAWC,cACX+L,EAAUC,cAEhB/L,qBAAU,WACNF,GJ6K2B,SAACA,GAChCkF,KACK9E,MAAK,SAAAjC,GACF6B,EAX2C,CAACpB,KA1LtC,YA0LuDwL,MAWzCjM,OACrBmC,OAAM,kBAAMwI,QAAQC,IAAI,iBIhL5B,CAAC/I,IAGJ,IAAM2K,EAAgBuB,uBAAY,SAACC,IAC9BC,MAAMC,QAAQF,IAASH,EAAQM,KAAKC,GAAQ,IAAMJ,EAAKhM,OACzD,IAEGoK,EAAY2B,uBAAY,SAACC,IAC1BC,MAAMC,QAAQF,IAASH,EAAQM,KAAKE,GAAQ,IAAML,EAAKhM,OACzD,IA8BH,OACI,6BACI,6BACI,kBAAC,GAAD,CAAUyL,eAAe,EAAMC,YAAc,SAAAlN,GAAK,OAAImK,QAAQC,IAAIpK,MADtE,YAIA,kBAAC,GAAD,CAAYyL,MAAOA,EAAOC,QAlClB,SAACoC,GJuKG,IAACjH,EItKjBxF,GJsKiBwF,EItKCiH,EJsK+B,SAACzM,GACtDkF,GAAoBM,GACfpF,MAAK,SAAAjC,GACF6B,EAhBkC,CAACpB,KA1L9B,WA0L8CuN,KAgBhChO,OACpBmC,OAAM,kBAAMwI,QAAQC,IAAI,eIzK3B/I,EAASgH,GAAU,MAiCHsD,WA1BD,SAAC6B,GJoKG,IAAClI,EInKfmI,MAAMC,QAAQF,IACfnM,GJkKgBiE,EIlKKkI,EAAKhM,IJkKK,SAACH,GACxCkF,GAAoBjB,GACf7D,MAAK,WACFJ,EArBgB,SAACiE,GAAD,MAAiB,CAACrF,KA1L1B,cA0L6CqF,MAqB5CyI,CAAazI,OACvB3D,OAAM,kBAAMwI,QAAQC,IAAI,uBI9IawB,UAAWA,EACnCC,YArBA,SAACmC,GJoKE,IAACnH,EInKpBxF,GJmKoBwF,EInKCmH,EJmK0C,SAAC3M,GACpEkF,GAAoBM,GACfpF,MAAK,WAzBc,IAAC6D,EAAYC,EA0B7BlE,GA1BiBiE,EA0BKuB,EAAUrF,IA1BH+D,EA0BQsB,EAAUtB,KA1BA,CAACtF,KA1LxC,cA0L2DqF,KAAIC,aA2BxE5D,OAAM,kBAAMwI,QAAQC,IAAI,uBIlJX0B,iBAhCK,WACrBzK,EAASgH,GAAU,SAgCH0D,oBAnBQ,SAACyB,GJyKI,IAACS,EIxKzBR,MAAMC,QAAQF,KACfnM,EAASgH,GAAU,WACnBhH,GJsK0B4M,EItKK,CAC3B3I,GAAIkI,EAAKhM,IACT+D,KAAMiI,EAAKjI,MJoK8C,SAAClE,GACtEA,EA/B2B,SAAC4M,GAAD,MAAqC,CAAChO,KA1LV,0BA0LyCgO,WA+BvFC,CAAuBD,SItJZjC,cAAeA,MCxE1BmC,GAAY,WACrB,OACI,6BACI,0CACA,yBAAK1N,UAAWC,KAAO0N,WACnB,kBAAC,GAAD,S,qBCNVzJ,GAAWxF,IAAMC,OAAO,CAC1BC,QAASJ,EACTK,iBAAiB,IAGR+O,GAAW,SACXC,EAAsBC,EAAqBC,EAAuBC,EAClEC,EAAcC,EAAqBxH,EAAgBc,EAAezB,GACvE,OAAO7B,GAAS8B,IAAT,aAA2B,CAC9BC,OAAQ,CACJ4H,eACAC,aACAC,eACAC,MACAC,MACAC,aACAxH,QACAc,OACAzB,gBAbH6H,GAAW,SAkBZC,EAAsBM,EAAmBC,EAAiB1H,EAC1DK,EAAgBD,EAAiBuH,EAAoBC,EACrDC,EAAwBC,EAAsBhP,GAClD,OAAO0E,GAASlF,KAAT,aAA4B,CAC/ByP,KAAM,CACFZ,eACAM,WACAC,SACA1H,QACAK,QACAD,SACAuH,YACAC,cACAC,gBACAC,cACAhP,WAjCHoO,GAAW,SAsCT/I,GACP,OAAOX,GAASjF,OAAO,aAAc,CACjCgH,OAAQ,CACJpB,SAzCH+I,GAAW,SA8CT/I,EAAYsJ,EAAmBC,EAAiB1H,EAChDK,EAAgBD,EAAiBuH,EAAoBC,EACrDC,EAAwBC,EAAsBhP,EAAekP,GACpE,OAAOxK,GAASqC,IAAI,aAAc,CAC9BkI,KAAM,CACF1N,IAAK8D,EACLsJ,WACAC,SACA1H,QACAK,QACAD,SACAuH,YACAC,cACAC,gBACAC,cACAhP,OACAkP,eCJVxP,GAAe,CACjBmF,SAAS,EACTC,YAAY,EACZuJ,aAAc,GACdc,MAAO,CAAC,CACJ5N,IAAK,GACL8M,aAAc,GACd5G,QAAS,GACTmH,OAAQ,GACRD,SAAU,GACVzH,MAAO,EACPK,MAAO,EACP2H,SAAU,GACVlP,KAAM,GACNsH,OAAQ,EACRH,QAAS,GACTF,QAAS,GACTO,QAAS,GACTG,IAAK,IAETO,aAAc,GACdkH,kBAAmB,CACf/J,GAAI,GACJsJ,SAAU,GACVC,OAAQ,KA6EVS,GAAa,SAACxK,GAAD,MAAuB,CAAC7E,KA5JZ,YA4J6B6E,YACtDE,GAAgB,SAACD,GAAD,MAA0B,CAAC9E,KA5JZ,eA4JgC8E,eAUxDwK,GAAa,SAACjB,EAAsBC,EAAqBC,EAC3CC,EAAcC,EAAcC,EAAqBxH,EACjDc,EAAezB,GAFhB,OAGrB,SAACnF,GACFA,EAAS2D,IAAc,IACvBqJ,GAAkBC,EAAcC,EAAYC,EAAcC,EAAKC,EAAKC,EAAYxH,EAAOc,EACnFzB,GACC/E,MAAK,SAAAC,GACFL,EA9BoC,CAACpB,KAzJlB,YAyJmCmP,MA8BlC1N,EAAIlC,KAAK4P,QAC7B/N,EAAS2D,IAAc,OAExBrD,OAAM,SAAAyD,GACT/D,EAASiO,IAAW,IACpBjO,EAAS2D,IAAc,SA6DlBwK,GAAgB,SAAClH,GAAD,OAAsB,SAACjH,GAChDA,EApFmB,SAACiH,GAAD,MAAuB,CAACrI,KA5JhB,YA4JiCqI,SAoFnDmH,CAAenH,MCjOfoH,GAAa,WACIhP,KAAnBiP,gBADsB,ID4NAC,ECzNvBR,EAAQnO,aAA+C,SAAAC,GAAK,OAAIA,EAAMkO,MAAMA,SAC5Ed,EAAerN,aAAsC,SAAAC,GAAK,OAAIA,EAAMkO,MAAMd,gBAC1EnG,EAAelH,aAA8B,SAAAC,GAAK,OAAIA,EAAMkO,MAAMjH,gBAClEkH,EAAoBpO,aAAqD,SAAAC,GAAK,OAAIA,EAAMkO,MAAMC,qBAC9FhO,EAAWC,cAGXuO,EADavC,cAAZwC,SAC4BC,SAASC,UAAU,GAEtD3O,GDgN6BuO,EChNHC,EDgN2B,SAACxO,GACtDA,EAzFsC,CAACpB,KAzJI,oBAyJqBqF,GAyFtCsK,OC/M1B,IAAMK,EAAY,SAAC3B,EAAsBM,EAAmBC,EAAiB1H,EAC1DK,EAAgBD,EAAiBuH,EAAoBC,EACrDC,EAAwBC,EAAsBhP,GAC7DoB,EDsJiB,SAACiN,EAAsBM,EAAmBC,EAAiB1H,EAC1DK,EAAgBD,EAAiBuH,EAAoBC,EACrDC,EAAwBC,EAAsBhP,GAF/C,OAGpB,SAACoB,EAAe6O,GACjB7O,EAAS2D,IAAc,IACvBqJ,GAAiBC,EAAcM,EAAUC,EAAQ1H,EAC7CK,EAAOD,EAAQuH,EAAWC,EAC1BC,EAAeC,EAAahP,GAC3BwB,MAAK,SAAAC,GACFL,EAASkO,GAAWW,IAAWd,MAAMd,kBAAc6B,OAAWA,OAC1DA,OAAWA,OAAWA,OAAWA,OAAWA,EAC5C,KACJ9O,EAAS2D,IAAc,OAExBrD,OAAM,SAAAyD,GACT/D,EAASiO,IAAW,IACpBjO,EAAS2D,IAAc,QCtKdoL,CAAU9B,EAAcM,EAAUC,EAAQ1H,EAAOK,EAAOD,EAAQuH,EAAWC,EAChFC,EAAeC,EAAahP,IAChCoB,EAASmO,GAAc,MAiB3BjO,qBAAU,WACFsO,GACAxO,EAASkO,GAAWM,OAAmBM,OACnCA,OAAWA,OAAWA,OAAWA,OAAWA,OAAWA,EAAW,OAE3E,CAAC9O,IAGJ,IAeImK,EAfE6E,EAAe,SAACC,EAAgB1B,EAAkBC,EAAgB1H,GACpE9F,ED6JoB,SAACiE,EAAYsJ,EAAmBC,EAAiB1H,EAChDK,EAAgBD,EAAiBuH,EAAoBC,EACrDC,EAAwBC,EAAsBhP,EAAekP,GAF9D,OAGvB,SAAC9N,EAAe6O,GACjB7O,EAAS2D,IAAc,IACvBqJ,GAAoB/I,EAAIsJ,EAAUC,EAAQ1H,EACtCK,EAAOD,EAAQuH,EAAWC,EAC1BC,EAAeC,EAAahP,EAAMkP,GACjC1N,MAAK,SAAAC,GACFL,EAASkO,GAAWW,IAAWd,MAAMd,eACrCjN,EAAS2D,IAAc,OAExBrD,OAAM,SAAAyD,GACT/D,EAASiO,IAAW,IACpBjO,EAAS2D,IAAc,QC3KduL,CAAaD,EAAQ1B,EAAUC,EAAQ1H,IAChD9F,EAASmO,GAAc,MAGrBgB,EAAe,SAACtB,GD0IE,IAAC5J,GCzIpBmI,MAAMC,QAAQwB,IAAS7N,GDyIHiE,ECzIyB4J,EAAK1N,IDyIf,SAACH,EAAe6O,GACxD7O,EAAS2D,IAAc,IACvBqJ,GAAoB/I,GACf7D,MAAK,SAAAC,GACFL,EAASkO,GAAWW,IAAWd,MAAMd,kBAAc6B,OAAWA,OAC1DA,OAAWA,OAAWA,OAAWA,OAAWA,EAC5C,KACJ9O,EAAS2D,IAAc,OAExBrD,OAAM,SAAAyD,GACT/D,EAASiO,IAAW,IACpBjO,EAAS2D,IAAc,WChJrByL,EAA0CrB,EAAM/D,KAAI,kBAA8C,CACpG7J,IADsD,EAAEA,IACnDoN,SADiD,EAAOA,SAE7DC,OAFsD,EAAiBA,OAE/D1H,MAF8C,EAAyBA,MAEhEM,QAFuC,EAAgCA,QAE9DiJ,IAAK,OAIjC,OAAQvI,GACJ,IAAK,MACDqD,EAAe,kBAAC,GAAD,CACX9B,QAAS,eACTE,OAAQ,CAAC,CAACM,MAAO,YAAa,CAACA,MAAO,WACtCT,WAAW,EACXI,cAAc,EACdE,OAAQuE,EACR3E,SAAU,SAACgH,EAAanO,GAAd,OAAyByN,EAAU3B,EAAc9L,EAAOoO,SAAUpO,EAAOqO,WAEvF,MACJ,IAAK,SACDrF,EAAe,kBAAC,GAAD,CACX9B,QAAS,cACTE,OAAQ,CAAC,CAACM,MAAO,kBACjBT,WAAW,EACXI,cAAc,IAElB,MACJ,IAAK,QACD2B,EAAe,kBAAC,GAAD,CACX9B,QAAS,SACTE,OAAQ,CAAC,CAACM,MAAO,WACjBT,WAAW,EACXI,cAAc,IAElB,MACJ,IAAK,SACD2B,EAAe,kBAAC,GAAD,CACX9B,QAAS,cACTE,OAAQ,CAAC,CAACM,MAAO,WAAYlK,MAAOqP,EAAkBT,UAClD,CAAC1E,MAAO,SAAUlK,MAAOqP,EAAkBR,SAC/C9E,OAAQsF,EAAkB/J,GAC1BmE,WAAW,EACXI,cAAc,EACdF,SAAU,SAACnI,EAAKgB,GAAN,OAAiB6N,EAAa7O,EAAKgB,EAAOoO,SAAUpO,EAAOqO,WAEzE,MACJ,QACIrF,EAAe,GAGvB,OACI,oCAEQA,EAEJ,kBAAC,KAAD,CACItB,MAAM,QACNgC,QAAS,CACL,CAAChC,MAAO,WAAYiC,MAAO,WAAYlM,KAAM,UAC7C,CAACiK,MAAO,SAAUiC,MAAO,UACzB,CAACjC,MAAO,QAASiC,MAAO,QAASlM,KAAM,WACvC,CAACiK,MAAO,UAAWiC,MAAO,UAAWlM,KAAM,WAC3C,CAACiK,MAAO,MAAOiC,MAAO,MAAOlM,KAAM,YAEvCT,KAAMiR,EACNjE,QAAS,CACL,CACIC,KAAM,MACNC,QAAS,WACTE,cAAc,EACdtB,QAAS,SAACqB,GAnG1BtL,EAASmO,GAAc,UAqGX,CACI/C,KAAM,SACNC,QAAS,eACTpB,QAAS,SAACqB,EAAOnN,GAAR,OAA2DgR,EAAahR,KAErF,CACIiN,KAAM,SACNC,QAAS,eAETpB,QAAS,SAACqB,EAAOnN,GAAR,OA3GD,SAAC0P,GD0MK,IAACjB,ECzM1BR,MAAMC,QAAQwB,KACf7N,EAASmO,GAAc,WACvBnO,GDuM2B4M,ECvMK,CAC5B3I,GAAI4J,EAAK1N,IACToN,SAAUM,EAAKN,SACfC,OAAQK,EAAKL,QDoM6C,SAACxN,GACvEA,EAvF2B,SAAC4M,GAAD,MAAqC,CAAChO,KA5JV,0BA4JyCgO,WAuFvF6C,CAAuB7C,QChGwD8C,CAAoBvR,MAIhGqN,QAAS,CACLT,YAAa,CACTpD,gBAAiB,UACjB3F,MAAO,OACPgJ,MAAO,OAEXS,oBAAqB,O,+BC1J5BkE,GAAehQ,gBAAK,SAACR,GAAsB,IAC7CoB,EAAalB,KAAbkB,UACAqP,EAA0FzQ,EAA1FyQ,aAAcnL,EAA4EtF,EAA5EsF,SAAU4I,EAAkElO,EAAlEkO,IAAKD,EAA6DjO,EAA7DiO,IAAKyC,EAAwD1Q,EAAxD0Q,YAAaC,EAA2C3Q,EAA3C2Q,KAAM3L,EAAqChF,EAArCgF,SAAUD,EAA2B/E,EAA3B+E,KAAM6L,EAAqB5Q,EAArB4Q,kBAFzB,EAIb9G,mBAAS2G,GAJI,oBAI5CI,EAJ4C,KAI/BC,EAJ+B,KAWnD,OACI,yBAAK7Q,UAAWmB,GACZ,2BAAI2D,GACJ,kBAACgM,GAAA,EAAD,CACIvR,MAAOqR,EACP7L,SAVS,SAACmH,EAAY6E,GAC9BF,EAAeE,GACfhM,EAASgM,IASD/C,IAAKA,EACLC,IAAKA,EACLyC,KAAMA,EACNrL,SAAUA,EACVoL,YAAaA,EACbE,kBAAmBA,QClCtBK,GAAY,WACrB,OACI,oCACI,0CACA,kBAACT,GAAD,CACIzL,KAAM,eACNkJ,IAAK,EACLC,IAAK,IACLyC,KAAM,EACNrL,UAAU,EACVmL,aAAc,CAAC,GAAI,IACnBzL,SAAU,SAACxF,GAAD,OAAWmK,QAAQC,IAAIpK,IACjCoR,kBAAmB,SAEvB,kBAAC,GAAD,Q,mFCTCM,GAA0C3Q,IAAMC,MAAK,YAA0B,IAAxB2Q,EAAuB,EAAvBA,IAAK3R,EAAkB,EAAlBA,MAAO4R,EAAW,EAAXA,MAC5E,OACI,oCACI,4BAAQnR,UAAmB,WAARkR,EAAA,UAAsBvO,KAAMyO,OAA5B,YAAsCzO,KAAMnD,MAASmD,KAAMyO,OACtEvG,QAASsG,EACT9L,UAAU,GAChB9F,OCND8R,GAAkD/Q,IAAMC,MAAK,YAAsB,IAApB+Q,EAAmB,EAAnBA,QAAS7C,EAAU,EAAVA,KAEjF,OACI,yBAAKzO,UAAWC,KAAOsR,eACnB,wCACA,6BACI,2BAAI9C,EAAKN,WAEb,kBAAC8C,GAAD,CAAc1R,MAAO,yDAAa4R,MAAOG,QCPxC7N,GAAoCnD,IAAMC,MAAK,YAA0B,IAAxB2Q,EAAuB,EAAvBA,IAAK3R,EAAkB,EAAlBA,MAAO4R,EAAW,EAAXA,MACtE,OACI,oCACI,4BAAQnR,UAAmB,WAARkR,EAAA,UAAsBvO,KAAMyO,OAA5B,YAAsCzO,KAAMnD,MAASmD,KAAMyO,OACtEvG,QAAS,kBAAMsG,EAAM5R,EAAMA,QAC3B8F,UAAW,GACjB9F,EAAMkK,WCFd+H,GAA4B,CAC9B,CAACjS,MAAO,EAAGkK,MAAO,yCAClB,CAAClK,MAAO,EAAGkK,MAAO,kCAClB,CAAClK,MAAO,EAAGkK,MAAO,iEAClB,CAAClK,MAAO,EAAGkK,MAAO,0DAClB,CAAClK,MAAO,EAAGkK,MAAO,6BAGTgI,GAAgDnR,IAAMC,MAAK,YAA4B,IAA1BmR,EAAyB,EAAzBA,OAAQjD,EAAiB,EAAjBA,KAAM0C,EAAW,EAAXA,MACpF,OACI,6BACI,sCACA,6BACI,2BAAI1C,EAAKL,SAEb,6BAEQoD,GAAO5G,KAAI,SAACrL,EAAOoS,GAAR,OAAmB,kBAAC,GAAD,CAAQC,IAAK,SAAWD,EAAOpS,MAAOA,EAAO4R,MAAOA,QAE1F,kBAACF,GAAD,CAAc1R,MAAO,wFAAmB4R,MAAOO,QC/BrDjT,GAAWC,IAAMC,OAAO,CAC1BC,QAASJ,EACTK,iBAAiB,IAGRgT,GAAU,SACLnL,EAAeoL,GACzB,OAAOrT,GAAS8H,IAAmB,cAAe,CAACG,QAAOoL,YACrD9Q,MAAK,SAAAC,GAAG,OAAIA,EAAIlC,KAAKgT,iBCJ5B7S,GAAyB,CAC3B6B,IAAK,OACL8M,aAAc,GACdO,OAAQ,cACRD,SAAU,WACVzH,MAAO,EACPK,MAAO,EACPvH,KAAM,GACNsH,OAAQ,EACRH,QAAS,GACTF,QAAS,GACTO,QAAS,GACTC,QAAS,GACTyH,SAAU,GACVvH,IAAK,GAmBI6K,GAAe,SAACvD,GAAD,OAAoB,SAAC7N,GAC7CA,EAJkB,SAAC6N,GAAD,MAAqB,CAACjP,KAjCtB,2BAiC2CiP,QAIpDwD,CAAcxD,MC/BrByD,GAAU,SAACvD,GACb,IAAMwD,EAAMxD,EAAMyD,QAAO,SAACC,EAAK5D,GAAN,OAAe4D,GAAO,EAAI5D,EAAK/H,QAAU,EAAI+H,EAAK/H,SAAQ,GAC7E4L,EAAOC,KAAKC,SAAWL,EACvBlR,EAAM0N,EAAMyD,QAAO,SAACC,EAAkC5D,EAAMgE,GAC1D,IAAMC,EAASL,EAAIF,KAAO,EAAI1D,EAAK/H,QAAU,EAAI+H,EAAK/H,OACtD,MAAO,CAACyL,IAAKO,EAAQ7N,GAAI6N,EAASJ,EAAOG,EAAIJ,EAAIxN,MAEnD,CAACsN,IAAK,EAAGtN,IAAK,IAEpB,OAAO8J,EAAM1N,EAAI4D,GAAK,IAIb8N,GAAkErS,IAAMC,MAAK,SAACR,GAEvF,IAAM6S,EAAYpS,aAAyC,SAAAC,GAAK,OAAIA,EAAMgO,QACpEE,EAAQnO,aAA+C,SAACqS,GAAD,OAAWA,EAAMlE,MAAMA,SAC9E/N,EAAWC,cACVgE,EAAMiO,cAANjO,GAL0F,EAO/DgF,oBAAS,GAPsD,oBAO1FkJ,EAP0F,KAO/EC,EAP+E,OAQvEnJ,oBAAS,GAR8D,oBAQ1FoJ,EAR0F,KAQnFC,EARmF,KAUjGpS,qBAAU,WAUN,OARImS,IACArS,EAASkO,GAAWjK,IACpBqO,GAAS,IAGTvE,EAAM1M,OAAS,GACfrB,EAASoR,GAAaE,GAAQvD,KAE3B,WACHjF,QAAQC,IAAI,oBAGjB,CAAC/I,EAAUiE,EAAI8J,EAAOsE,IAGzB,IAAM3B,EAAUxE,uBAAY,WACxBkG,GAAa,KACd,CAACD,IAOErB,EAAS5E,uBAAY,WACvBkG,GAAa,GACTrE,EAAM1M,OAAS,GACfrB,EAASoR,GAAaE,GAAQvD,OAEnC,CAACA,EAAO/N,IAIX,OACI,yBAAKZ,UAAWmT,KAAOC,UAEnB,6BACI,kBAAC/B,GAAD,CAAeC,QAASA,EAAS7C,KAAMmE,KAG1CG,GACD,6BACI,kBAACtB,GAAD,CAAcN,MAvBL,SAACzK,GAClB,IAAImJ,EAAS+C,EAAU7R,IACvBH,EDbyB,SAAC8F,EAAemJ,GAAhB,OAAmC,SAACjP,GAEjEiR,GAAsBnL,EAAOmJ,GACxB7O,MAAK,SAAAC,GACFyI,QAAQC,IAAI1I,GACZyI,QAAQC,IAAI1I,EAAI6Q,SAChBpI,QAAQC,IAAI1I,EAAIyF,OAChB,IAAI7B,EAAK5D,EAAI6Q,QACTpL,EAAQzF,EAAIyF,MAChB9F,ET6GkE,CAC1EpB,KA1J2C,oBA2J3CgO,QS/GmC,CAAC3I,KAAI6B,cAGnCxF,OAAM,kBAAMwI,QAAQC,IAAI,kBCChB0J,CAAkB3M,EAAOmJ,KAqBS6B,OAAQA,EAAQjD,KAAMmE,SCzE5DU,GAAYhT,IAAMC,MAAK,WAEhC,OACI,yBAAKP,UAAWmT,KAAOC,UAAvB,YAEI,kBAACT,GAAD,UCIC5O,GAAe,gBACfH,GAAmB,mBAGnBwJ,GAAQ,SACRD,GAAQ,SAIRoG,GAAS,WAClB,OACI,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAAC5M,KAdF,IAciB6M,OAAQ,kBAAM,kBAACpT,EAAD,SAC1C,kBAAC,IAAD,CAAOuG,KAdE,SAcW6M,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAO7M,KAAM7C,GAAc0P,OAAQ,kBAAM,kBAAChP,GAAD,SACzC,kBAAC,IAAD,CAAOmC,KAAMhD,GAAkB6P,OAAQ,kBAAM,kBAAC9N,GAAD,SAC7C,kBAAC,IAAD,CAAOiB,KAdK,WAcW6M,OAAQ,kBAAM,kBAAC5N,GAAD,SACrC,kBAAC,IAAD,CAAOe,KAdE,SAcW6M,OAAQ,kBAAM,kBAAC,GAAD,SAClC,kBAAC,IAAD,CAAO7M,KAAMwG,GAAOqG,OAAQ,kBAAM,kBAAC,GAAD,SAElC,kBAAC,IAAD,CAAO7M,KAAM,aAAc6M,OAAQ,kBAAM,kBAACH,GAAD,WCxBxCI,GAAS,WAClB,IAAMtU,EAAaoB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKtB,cACxEwB,EAAWC,cAEX8S,EAAgB7G,uBAAY,WAC9BlM,GrCyCsB,SAACA,GAC3BA,EAASf,EAAe,YACxBf,IACKkC,MAAK,SAAAC,GACEA,EAAIlC,MACJ6B,EAAStB,GAAe,IACxBsB,EAASf,EAAe,gBAExBe,EAASlB,EAAc,UACvBkB,EAASf,EAAe,uBqCjDjC,CAACT,IAEJ,OACI,yBAAKY,UAAWC,IAAO2T,KACnB,yBAAK5T,UAAWC,IAAO4T,MAEnB,yBAAK7T,UAAWC,IAAOmR,QAClBhS,GAAc,kBAACqE,EAAA,EAAD,CAAQC,QAAQ,YAAYd,MAAM,UAAUiI,QAAS8I,GAArD,YAGnB,yBAAK3T,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAAS+Q,OAAK,EAACjS,GDfZ,ICeyBsC,gBAAiB5D,IAAO6D,YAApD,YAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GDjBR,SCiBmBsC,gBAAiB5D,IAAO6D,YAA5C,UAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GAAIwC,GAAcF,gBAAiB5D,IAAO6D,YAAnD,iBAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GAAIqC,GAAkBC,gBAAiB5D,IAAO6D,YAAvD,oBAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GDvBL,WCuBmBsC,gBAAiB5D,IAAO6D,YAA/C,YAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GDzBR,SCyBmBsC,gBAAiB5D,IAAO6D,YAA5C,cAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GAAI6L,GAAOvJ,gBAAiB5D,IAAO6D,YAA5C,cAEJ,yBAAK9D,UAAWC,IAAOwC,MACnB,kBAAC,IAAD,CAASlB,GAAI4L,GAAOtJ,gBAAiB5D,IAAO6D,YAA5C,iBC3CPgQ,GAAOxT,IAAMC,MAAK,WAC3B,OACI,6BACI,kBAAC,GAAD,MACA,kBAAC,GAAD,UCFCwT,GAA8B,SAAChU,GAExC,OACI,yBAAKC,UAAU,OACX,6BACI,kBAAC8T,GAAD,SCCIE,QACW,cAA7BC,OAAO5E,SAAS6E,UAEe,UAA7BD,OAAO5E,SAAS6E,UAEhBD,OAAO5E,SAAS6E,SAASC,MACvB,2D,iCClBAjV,GAAe,GCAfA,GAAe,GCAfA,GAAe,GCafkV,GAAcC,aAAgB,CAChC3P,anCA+B,WAAoF,IAAnFjE,EAAkF,uDAAxDvB,EAAeoV,EAAyC,uCAClH,OAAQA,EAAO9U,MACX,IAbqB,WAcjB,OAAO,eACAiB,EADP,CAEI2D,aAAckQ,EAAOlQ,eAE7B,IAjBuB,YAkBnB,OAAO,eACA3D,EADP,CAEI4D,QAASiQ,EAAOjQ,UAExB,IArB6B,eAsBzB,OAAO,eACA5D,EADP,CAEI6D,WAAYgQ,EAAOhQ,aAE3B,QACI,OAAO7D,ImCjBf8T,YDZ8B,WAAoF,IAAnF9T,EAAkF,uDAAxDvB,GAAeoV,EAAyC,uCACjH,OAAQA,EAAO9U,MACX,IAAK,mBACD,OAAO,gBAAIiB,GACf,QACI,OAAOA,ICQfmF,gB/BFkC,WAAoF,IAAnFnF,EAAkF,uDAAxDvB,GAAcoV,EAA0C,uCACrH,OAAQA,EAAO9U,MACX,KAAKgG,GACD,OAAO,eACA/E,EADP,CAEIgF,WAAY6O,EAAO7O,aAE3B,IAjBwC,6BAkBpC,OAAO,eACAhF,EADP,CAEI4D,QAASiQ,EAAOjQ,UAExB,IArB8C,gCAsB1C,OAAO,eACA5D,EADP,CAEI6D,WAAYgQ,EAAOhQ,aAE3B,QACI,OAAO7D,I+Bff+T,MFdwB,WAAoF,IAAnF/T,EAAkF,uDAAxDvB,GAAeoV,EAAyC,uCAC3G,OAAQA,EAAO9U,MACX,IAAK,mBACD,OAAO,eAAIiB,GACf,QACI,OAAOA,IEUfgU,QHf0B,WAAoF,IAAnFhU,EAAkF,uDAAxDvB,GAAeoV,EAAyC,uCAC7G,OAAQA,EAAO9U,MACX,IAAK,UACD,OAAO,gBAAIiB,GACf,QACI,OAAOA,IGWfC,K5CLuB,WAA4F,IAA3FD,EAA0F,uDAA5DvB,EAAcoV,EAA8C,uCAClH,OAAQA,EAAO9U,MACX,IAZiB,yBAab,OAAO,eAAIiB,EAAX,CAAkBrB,WAAYkV,EAAO/U,QACzC,IAbS,iBAcL,OAAO,eAAIkB,EAAX,CAAkBtB,KAAK,eAAKmV,EAAOnV,QACvC,IAdU,kBAeN,OAAO,eAAIsB,EAAX,CAAkBpB,MAAOiV,EAAOjV,QACpC,QACI,OAAOoB,I4CHfE,I3CNsB,WAAoF,IAAnFF,EAAkF,uDAAxDvB,EAAcoV,EAA0C,uCACzG,OAAQA,EAAO9U,MACX,IAZW,iBAaP,OAAO,eAAIiB,EAAX,CAAkBd,OAAQ2U,EAAO3U,SACrC,IAbU,gBAcN,OAAO,eAAIc,EAAX,CAAkBpB,MAAOiV,EAAOjV,QACpC,IAdmB,yBAef,OAAO,eAAIoB,EAAX,CAAkBb,cAAe0U,EAAO1U,gBAC5C,QACI,OAAOa,I2CFfkO,MpB2EwB,WAAoF,IAAnFlO,EAAkF,uDAAxDvB,GAAcoV,EAA0C,uCAC3G,OAAQA,EAAO9U,MACX,IA/FuB,YAgGnB,OAAO,eACAiB,EADP,CAEIkO,MAAO2F,EAAO3F,QAEtB,IA5FuB,YA6FnB,OAAO,eACAlO,EADP,CAEI4D,QAASiQ,EAAOjQ,UAExB,IAhG6B,eAiGzB,OAAO,eACA5D,EADP,CAEI6D,WAAYgQ,EAAOhQ,aAE3B,IA7GqB,WAkHrB,IAhH2B,cAoH3B,IArH2B,cAsHvB,OAAO,eACA7D,GAEX,IAvHuC,oBAwHnC,OAAO,eACAA,EADP,CAEIoN,aAAcyG,EAAOzP,KAE7B,IAtHuB,YAuHnB,OAAO,eACApE,EADP,CAEIiH,aAAc4M,EAAOzM,QAE7B,IA1HmD,0BA2H/C,OAAO,eACApH,EADP,CAEImO,kBAAkB,eACXnO,EAAMmO,kBADI,GAEV0F,EAAO9G,WAGtB,IAxIuC,oBAyInC,OAAO,eACA/M,EADP,CAEIkO,MAAOlO,EAAMkO,MAAM/D,KAAI,SAAA6D,GAAI,OAAIA,EAAK1N,MAAQuT,EAAO9G,QAAQ3I,GAA5B,eAAqC4J,EAArC,CAA2C/H,MAAO4N,EAAO9G,QAAQ9G,QAAjE,eAA8E+H,QAGrH,QACI,OAAOhO,IoBjIfuK,M3B+HwB,WAA8F,IAA7FvK,EAA4F,uDAA7DvB,GAAcoV,EAA+C,uCACrH,OAAQA,EAAO9U,MACX,IAnJU,YAoJN,OAAO,eACAiB,EADP,CACc0F,UAAU,aAAKmO,EAAOtJ,SAGxC,IAvJS,WAwJL,OAAO,eACAvK,EADP,CACc0F,UAAU,CAAEmO,EAAOvH,MAAV,oBAAmBtM,EAAM0F,cAGpD,IA3JY,cA4JR,OAAO,eACA1F,EADP,CACc0F,UAAW1F,EAAM0F,UAAUuO,QAAO,SAAAC,GAAC,OAAIA,EAAE5T,MAAQuT,EAAOzP,QAG1E,IA/JY,cAgKR,OAAO,eACApE,EADP,CACc0F,UAAW1F,EAAM0F,UAAUyE,KAAI,SAAAmC,GAAI,OAAIA,EAAKhM,MAAQuT,EAAOzP,GAApB,eAA6BkI,EAA7B,CAAmCjI,KAAMwP,EAAOxP,OAAQiI,OAGjH,IAnKuB,YAoKnB,OAAO,eACAtM,EADP,CAEIiH,aAAc4M,EAAOzM,QAE7B,IAvKmD,0BAwK/C,OAAO,eACApH,EADP,CAEIkH,kBAAkB,eACXlH,EAAMkH,kBADI,GAEV2M,EAAO9G,WAGtB,QACI,OAAO/M,I2BlKfgO,KXCuB,WAAoE,IAAnEhO,EAAkE,uDAAhDvB,GAAcoV,EAAkC,uCAC1F,OAAQA,EAAO9U,MACX,IAtBc,2BAuBV,OAAO,eACAiB,EADP,GACiB6T,EAAO7F,MAG5B,QACI,OAAOhO,MWNNoS,GAAQ+B,aAAYR,GAAaS,aAAgBC,OAI9Db,OAAOpB,MAAQA,GCrBfkC,IAAStB,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUZ,MAAOA,IACb,kBAAC,GAAD,QAGRmC,SAASC,eAAe,SL4HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpU,MAAK,SAAA0D,GACJA,EAAa2Q,gBAEdnU,OAAM,SAAA7B,GACLqK,QAAQrK,MAAMA,EAAMiD,a,mBMhJ5BhE,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,wB","file":"static/js/main.18f24ab6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"LoginForm_loginBlock__3Hd_A\",\"inputBlock\":\"LoginForm_inputBlock__xysX4\",\"checkboxBlock\":\"LoginForm_checkboxBlock__1tfzN\",\"link\":\"LoginForm_link__FsZ_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionInput\":\"Checkbox_optionInput__15dEI\",\"click-wave\":\"Checkbox_click-wave__3HESl\",\"radio\":\"Checkbox_radio__2A7Gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3TPoP\",\"menu\":\"Header_menu__65jxK\",\"button\":\"Header_button__287bi\",\"item\":\"Header_item__2qKv2\",\"activeLick\":\"Header_activeLick__1cFc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__2pNSR\"};","module.exports = __webpack_public_path__ + \"static/media/loader.b31e4952.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1VY1m\"};","module.exports = __webpack_public_path__ + \"static/media/Spin-1s.62e138ae.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyTable\":\"PacksPage_bodyTable__1mOYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"Cards_buttonContainer__2Bv5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Slider_container__31_Pu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBody\":\"LearnPage_cardBody__3eKOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBody\":\"SelectedCardContainer_cardBody__1DSFo\"};","// export const BACK_URL = 'http://localhost:7542/2.0/';//for developers\r\n// export const BACK_URL = 'https://github.com/IgnatZakalinsky/cards-nya-back-2-0/';//alpha release\r\nexport const BACK_URL = 'https://neko-back.herokuapp.com/2.0';//alpha release\r\n","import axios from 'axios'\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instanse.post<UserType>('auth/login', data)\r\n    },\r\n    logout() {\r\n        return instanse.delete<LogoutParamsType>('auth/me')\r\n    },\r\n    me() {\r\n        return instanse.post<UserType>('auth/me')\r\n    }\r\n};\r\n\r\n// types for auth\r\nexport type LogoutParamsType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type UserType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number, // количество колод\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n    error: string,\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI, LoginParamsType, UserType} from '../l3-dal/cards-api';\r\nimport {setAppStatusAC} from '../../../../n1-main/m2-bll/app-reducer';\r\n\r\nconst SET_IS_LOGGED_IN = 'login/SET_IS_LOGGED_IN';\r\nconst SET_USER = 'login/SET_USER';\r\nconst SET_ERROR = 'login/SET-ERROR';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isLoggedIn: false,\r\n    error: null as string | null,\r\n};\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.value};\r\n        case SET_USER:\r\n            return {...state, user: {...action.user}};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setIsLoginInAC = (value: boolean) =>\r\n    ({type: SET_IS_LOGGED_IN, value} as const);\r\nexport const setUserAC = (user: UserType) =>\r\n    ({type: SET_USER, user} as const);\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: SET_ERROR, error} as const);\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            if (res.data) {\r\n                dispatch(setUserAC(res.data));\r\n                dispatch(setIsLoginInAC(true));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            } else {\r\n                dispatch(setAppErrorAC('error'));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setAppErrorAC(e.response ? (e.response.data.error) : (e.message + ', more details in the console')));\r\n            dispatch(setAppStatusAC('succeeded'));\r\n        })\r\n};\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoginInAC(false));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            } else {\r\n                dispatch(setAppErrorAC('error'));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            }\r\n        })\r\n};\r\n\r\n\r\n// types\r\nexport type AuthInitialStateType = typeof initialState\r\ntype ActionsType = ReturnType<typeof setIsLoginInAC>\r\n    | ReturnType<typeof setUserAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../../n2-faetures/f1-auth/a1-login/l3-dal/cards-api';\r\nimport {setIsLoginInAC, setUserAC} from '../../n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer';\r\n\r\nconst SET_STATUS = 'APP/SET-STATUS';\r\nconst SET_ERROR = 'APP/SET-ERROR';\r\nconst SET_IS_INITIALIZED = 'APP/SET-IS-INITIALIZED';\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n        case SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: SET_STATUS, status} as const);\r\nexport const setAppErrorAC = (error: string | null) => ({type: SET_ERROR, error} as const);\r\nexport const setAppIsInitializedAC = (isInitialized: boolean) => ({type: SET_IS_INITIALIZED, isInitialized} as const);\r\n\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    authAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setUserAC(res.data));\r\n                dispatch(setIsLoginInAC(true));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            } else {\r\n                dispatch(setIsLoginInAC(false));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            }\r\n            dispatch(setAppIsInitializedAC( true))\r\n            dispatch(setAppStatusAC('succeeded'));\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('succeeded'));\r\n        })\r\n\r\n};\r\n\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = typeof initialState\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedActionType = ReturnType<typeof setAppIsInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppStatusActionType\r\n    | SetAppErrorActionType\r\n    | SetIsInitializedActionType\r\n\r\n\r\n","import styles from './Preloader.module.css';\r\nimport preloader from '../../assets/images//loader.svg';\r\nimport React from 'react';\r\n\r\nexport type PreloaderPropsType = {}\r\n\r\nexport const Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.loader}>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {initializeAppTC, RequestStatusType} from '../../m2-bll/app-reducer';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport styles from './Profile.module.css'\r\n\r\nexport const Profile = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\r\n    let user = useSelector<AppRootStateType, any>(state => state.auth.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(!user._id || !isLoggedIn) {\r\n            dispatch(initializeAppTC())\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n    if (status === 'idle' || status === 'loading') {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Profile</h1>\r\n            <div>email: {user.email} </div>\r\n            <div>token: {user.token}</div>\r\n            <div>publicCardPacksCount: {user.publicCardPacksCount}</div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n","import React from 'react'\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../../../n1-main/m2-bll/store';\r\nimport {loginTC} from '../../l2-bll/auth-reducer';\r\nimport {Button, Checkbox, FormControl, FormControlLabel, FormGroup, Grid, TextField} from '@material-ui/core';\r\nimport style from './LoginForm.module.css';\r\nimport {RECOVER_PASSWORD, REGISTRATION} from '../../../../../n1-main/m1-ui/routes/Routes';\r\nimport styles from '../../../../../n1-main/m1-ui/header/Header.module.css';\r\nimport {RequestStatusType} from '../../../../../n1-main/m2-bll/app-reducer';\r\nimport {Preloader} from '../../../../../n1-main/m1-ui/common/Preloader/Preloader';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = React.memo(() => {\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n     const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length <= 6) {\r\n                errors.password = 'password must be more than 6 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n                dispatch(loginTC(values));\r\n        },\r\n    });\r\n\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            {error && <div style={{color: 'red'}}>{error.toString()}</div>}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                checked={formik.values.rememberMe}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n            <div className={style.link}>\r\n                <NavLink to={RECOVER_PASSWORD} activeClassName={styles.activeLick}>fogot fassword?</NavLink>\r\n            </div>\r\n            <div className={style.link}>\r\n                <NavLink to={REGISTRATION} activeClassName={styles.activeLick}>register</NavLink>\r\n            </div>\r\n        </Grid>\r\n    </Grid>\r\n});\r\n","import React from 'react';\r\nimport {Login} from './Login';\r\n\r\nexport const LoginFormContainer = React.memo(() => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Login/>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport {LoginFormContainer} from './LoginForm/LoginFormContainer';\r\n\r\nexport const LoginPage = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <LoginFormContainer/>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport {LoginPage} from '../../../n2-faetures/f1-auth/a1-login/l1-ui/LoginPage';\r\n\r\nexport const Login = React.memo(() => {\r\n    return (\r\n        <div>\r\n           <h1>Login</h1>\r\n            <LoginPage/>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const RegistrationApi = {\r\n    register(email: string, password: string) {\r\n        return instance.post(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RegistrationApi} from \"../r3-dal/cards-reduser-api\";\r\n\r\nconst REGISTER: 'REGISTER' = 'REGISTER';\r\nconst SET_ERROR: 'SET_ERROR' = 'SET_ERROR';\r\nconst SET_FETCHING: 'SET_FETCHING' = 'SET_FETCHING';\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    isError: false,\r\n    isFetching: false,\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                isRegistered: action.isRegistered,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.isError,\r\n            };\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const registrationAC = (isRegistered: boolean) => ({type: REGISTER, isRegistered} as const);\r\nconst setErrorAC = (isError: boolean) => ({type: SET_ERROR, isError} as const);\r\nconst setFetchingAC = (isFetching: boolean) => ({type: SET_FETCHING, isFetching} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof registrationAC | typeof setErrorAC | typeof setFetchingAC>;\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    dispatch(setFetchingAC(true));\r\n    RegistrationApi.register(email, password).then(res => {\r\n        dispatch(registrationAC(true));\r\n        dispatch(setFetchingAC(false));\r\n\r\n    }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n","import React from 'react';\r\n\r\nimport preloader from \"./Spin-1s.svg\";\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return <div>\r\n        <img src={preloader} alt={'preloader'}/>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {registerTC} from \"../r2-bll/register-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Preloader} from \"./Preloader/Preloader\";\r\nimport {AppRootStateType} from \"../../../../n1-main/m2-bll/store\";\r\n\r\nconst validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    } else if (values.password.length <= 3) {\r\n        errors.password = 'Must be at least 3 characters';\r\n    } else if (values.password.length > 100) {\r\n        errors.password = 'Must be not more than 100 characters';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\n\r\n\r\nexport const Registration = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector<AppRootStateType>(state => state.registration.isError);\r\n    const isRegistered = useSelector<AppRootStateType>(state => state.registration.isRegistered);\r\n    const isFetching = useSelector<AppRootStateType>(state => state.registration.isFetching);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            const {email, password} = values;\r\n            dispatch(registerTC(email, password));\r\n        },\r\n    });\r\n\r\n    if(isFetching && !isRegistered && !isError){\r\n        return <Preloader/>;\r\n    }\r\n    if(isError && !isFetching) {\r\n        return <div>Error!</div>;\r\n    }\r\n\r\n    if(isRegistered && !isFetching) {\r\n        return <Redirect to={'login'}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <ul>\r\n                    <li><input\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                    /> <label htmlFor=\"email\">Email Address</label>\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>{formik.errors.email}</div>\r\n                        ) : null}\r\n                    </li>\r\n                    <li><input\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                    /> <label htmlFor=\"password\">Password</label>\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div>{formik.errors.password}</div>\r\n                        ) : null}\r\n                    </li>\r\n                </ul>\r\n                <button type=\"submit\" disabled={!!isFetching}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const RecoverApi = {\r\n    recover(email: string) {\r\n        return instance.post(`auth/forgot`, {\r\n            email,\r\n            from: `test-front-admin <ai73a@yandex.by>`,\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                     password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>\r\n                     link</a></div>`,\r\n        });\r\n    },\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RecoverApi} from \"../rec3-dal/recoveryApi\";\r\n\r\nconst SET_ACCEPTED: 'recover-password/SET_ACCEPTED' = 'recover-password/SET_ACCEPTED';\r\nconst SET_ERROR: 'recover-password/SET_ERROR' = 'recover-password/SET_ERROR';\r\nconst SET_FETCHING: 'recover-password/SET_FETCHING' = 'recover-password/SET_FETCHING';\r\n\r\nconst initialState = {\r\n    isAccepted: false,\r\n    isError: false,\r\n    isFetching: false,\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_ACCEPTED:\r\n            return {\r\n                ...state,\r\n                isAccepted: action.isAccepted,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.isError,\r\n            };\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setAcceptedAC = (isAccepted: boolean) => ({type: SET_ACCEPTED, isAccepted} as const);\r\nconst setErrorAC = (isError: boolean) => ({type: SET_ERROR, isError} as const);\r\nconst setFetchingAC = (isFetching: boolean) => ({type: SET_FETCHING, isFetching} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setAcceptedAC | typeof setErrorAC | typeof setFetchingAC>;\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setFetchingAC(true));\r\n    RecoverApi.recover(email).then(res => {\r\n        dispatch(setAcceptedAC(true));\r\n        dispatch(setFetchingAC(false));\r\n\r\n    }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n","import React, {memo} from \"react\";\r\n\r\nimport styles from './RecoverPasswordPage.module.css';\r\nimport {useFormik} from \"formik\";\r\nimport {registerTC} from \"../../../a2-register/r2-bll/register-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../n1-main/m2-bll/store\";\r\nimport {recoverTC} from \"../../rec2-bll/recover-password-reducer\";\r\nimport {Preloader} from \"../../../a2-register/r1-ui/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    return errors;\r\n};\r\n\r\n\r\nexport const RecoverPasswordPage = memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector<AppRootStateType>(state => state.recoverPassword.isError);\r\n    const isFetching = useSelector<AppRootStateType>(state => state.recoverPassword.isFetching);\r\n    const isAccepted = useSelector<AppRootStateType>(state => state.recoverPassword.isAccepted);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            const {email} = values;\r\n            dispatch(recoverTC(email));\r\n        },\r\n    });\r\n\r\n    if(isFetching && !isAccepted && !isError){\r\n        return <Preloader/>;\r\n    }\r\n    if(isError && !isFetching) {\r\n        return <div>Error!</div>;\r\n    }\r\n\r\n    if(isAccepted && !isFetching) {\r\n        return <Redirect to={'newPass'}/>;\r\n    }\r\n\r\n        return (\r\n            <>\r\n                <h1>Recover Password</h1>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <ul>\r\n                        <li><input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}\r\n                        /> <label htmlFor=\"email\">Email Address</label>\r\n                            {formik.touched.email && formik.errors.email ? (\r\n                                <div>{formik.errors.email}</div>\r\n                            ) : null}\r\n                        </li>\r\n                    </ul>\r\n                    <button type=\"submit\" disabled={!!isFetching}>Submit</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n)\r\n","import React from 'react';\r\n\r\nexport const NewPass = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <h1>NewPassword</h1>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\nimport {CreatePackType, DeletePackType, PacksInitialStateType, UpdatePackType} from '../p2-bll/packs-reducer';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const packsAPI = {\r\n    getPacks(pageCount: number = 1000) {\r\n        return instanse.get<PacksInitialStateType>(`cards/pack?pageCount=${pageCount}`, {params: {x: 1}})\r\n            .then(res => res.data.cardPacks)\r\n    },\r\n    createPack(cardsPack: {name: string}) {\r\n        return instanse.post<CreatePackType>(`cards/pack`, {cardsPack})\r\n            .then(res => res.data.newCardsPack)\r\n    },\r\n    deletePack(id:string) {\r\n        return instanse.delete<DeletePackType>(`cards/pack?id=${id}`)\r\n            .then(res => res.data.deletedCardsPack)\r\n    },\r\n    updatePack(cardsPack: {_id: string, name: string}) {\r\n        return instanse.put<UpdatePackType>(`cards/pack`, {cardsPack})\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","import {Dispatch} from 'redux';\r\nimport {packsAPI} from '../p3-dal/packs-api';\r\nimport {CurrentCardValuesType} from \"../../c2-cards/c2-bll/cards-reduser\";\r\n\r\nconst SET_PACKS = 'SET_PACKS';\r\nconst ADD_PACK = 'ADD_PACK';\r\nconst DELETE_PACK = 'DELETE_PACK';\r\nconst UPDATE_PACK = 'UPDATE_PACK';\r\nconst SET_MODAL: 'SET_MODAL' = 'SET_MODAL';\r\nconst SET_CURRENT_PACK_VALUES: 'SET_CURRENT_PACK_VALUES' = 'SET_CURRENT_PACK_VALUES';\r\n\r\nconst initialState: PacksInitialStateType = {\r\n    cardPacks: [\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-27T11:12:49.486Z',\r\n            grade: 0,\r\n            more_id: '5f8db2d0842c1e00044adcdf',\r\n            name: 'new pack',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-27T11:12:49.486Z',\r\n            user_id: '5f8db2d0842c1e00044adcdf',\r\n            user_name: 'konstantinkspb@gmail.com',\r\n            __v: 0,\r\n            _id: '5f9800b17247822b58a8cad1'\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-27T11:12:47.033Z',\r\n            grade: 0,\r\n            more_id: '5f8db2d0842c1e00044adcdf',\r\n            name: 'new pack',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-27T11:12:47.033Z',\r\n            user_id: '5f8db2d0842c1e00044adcdf',\r\n            user_name: 'konstantinkspb@gmail.com',\r\n            __v: 0,\r\n            _id: '5f9800af7247822b58a8cad0',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-27T11:12:44.512Z',\r\n            grade: 0,\r\n            more_id: '5f8db2d0842c1e00044adcdf',\r\n            name: 'new pack',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-27T11:12:44.512Z',\r\n            user_id: '5f8db2d0842c1e00044adcdf',\r\n            user_name: 'konstantinkspb@gmail.com',\r\n            __v: 0,\r\n            _id: '5f9800ac7247822b58a8cacf',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-26T23:11:54.501Z',\r\n            deckCover: '',\r\n            grade: 0,\r\n            more_id: '5eecf82a3ed8f700042f1186',\r\n            name: 'update new pack 2.0',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-26T23:12:06.637Z',\r\n            user_id: '5eecf82a3ed8f700042f1186',\r\n            user_name: 'nya',\r\n            __v: 0,\r\n            _id: '5f9757ba080b9c0004e8c78b',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-26T22:57:27.964Z',\r\n            deckCover: null,\r\n            grade: 0,\r\n            more_id: '5f8aed62122a4300049db62a',\r\n            name: 'new checked name',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-26T22:57:30.609Z',\r\n            user_id: '5f8aed62122a4300049db62a',\r\n            user_name: 'alexeisamuta@gmail.com',\r\n            __v: 0,\r\n            _id: '5f975457080b9c0004e8c78a',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-26T20:31:43.957Z',\r\n            grade: 0,\r\n            more_id: '5f8a1b993a8b540004322cc8',\r\n            name: 'no Name',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-26T20:31:43.957Z',\r\n            user_id: '5f8a1b993a8b540004322cc8',\r\n            user_name: 'kachanovski03@gmail.com',\r\n            __v: 0,\r\n            _id: '5f97322f080b9c0004e8c770',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-23T17:09:47.044Z',\r\n            grade: 0,\r\n            more_id: '5f6756d7b7d4170004385d85',\r\n            name: '2',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-23T17:09:47.044Z',\r\n            user_id: '5f6756d7b7d4170004385d85',\r\n            user_name: 'Vik',\r\n            __v: 0,\r\n            _id: '5f930e5b5cea1f1aa027b9ea',\r\n        }\r\n    ],\r\n    cardPacksTotalCount: 693,\r\n    maxCardsCount: 16,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 100,\r\n    token: 'fac9dcd0-1847-11eb-8597-0b97c01a13e4',\r\n    tokenDeathTime: 1603809099421,\r\n    currentModal: '',\r\n    currentPackValues: {\r\n        id: '',\r\n        name: '',\r\n    },\r\n};\r\n\r\nexport const packsReduser = (state: PacksInitialStateType = initialState, action: ActionsType): PacksInitialStateType => {\r\n    switch (action.type) {\r\n        case SET_PACKS: {\r\n            return {\r\n                ...state, cardPacks: [...action.packs]\r\n            }\r\n        }\r\n        case ADD_PACK: {\r\n            return {\r\n                ...state, cardPacks: [action.pack, ...state.cardPacks]\r\n            }\r\n        }\r\n        case DELETE_PACK: {\r\n            return {\r\n                ...state, cardPacks: state.cardPacks.filter(p => p._id !== action.id)\r\n            }\r\n        }\r\n        case UPDATE_PACK: {\r\n            return {\r\n                ...state, cardPacks: state.cardPacks.map(pack => pack._id === action.id ? {...pack, name: action.name} : pack)\r\n            }\r\n        }\r\n        case SET_MODAL:\r\n            return {\r\n                ...state,\r\n                currentModal: action.modal,\r\n            };\r\n        case SET_CURRENT_PACK_VALUES:\r\n            return {\r\n                ...state,\r\n                currentPackValues: {\r\n                    ...state.currentPackValues,\r\n                    ...action.payload,\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actionsCreators\r\nexport const setPacksAC = (packs: Array<PackType>) => ({type: SET_PACKS, packs} as const);\r\nexport const addPackAC = (pack: PackType) => ({type: ADD_PACK, pack} as const);\r\nexport const deletePackAC = (id: string) => ({type: DELETE_PACK, id} as const);\r\nexport const updatePackAC = (id: string, name: string) => ({type: UPDATE_PACK, id, name} as const);\r\nconst setModalAC = (modal: ModalType) => ({type: SET_MODAL, modal} as const);\r\nconst setCurrentPackValuesAC = (payload: CurrentPackValuesType) => ({type: SET_CURRENT_PACK_VALUES, payload} as const);\r\n\r\n// thunk\r\nexport const requestPacksT = () => (dispatch: Dispatch) => {\r\n    packsAPI.getPacks()\r\n        .then(data => {\r\n            dispatch(setPacksAC(data))\r\n        }).catch(() => console.log('error'))\r\n};\r\nexport const addPackT = (cardsPack: { name: string }) => (dispatch: Dispatch) => {\r\n    packsAPI.createPack(cardsPack)\r\n        .then(data => {\r\n            dispatch(addPackAC(data))\r\n        }).catch(() => console.log('error'))\r\n};\r\nexport const deletePackT = (id: string) => (dispatch: Dispatch) => {\r\n    packsAPI.deletePack(id)\r\n        .then(() => {\r\n            dispatch(deletePackAC(id))\r\n        }).catch(() => console.log('delete error'))\r\n};\r\nexport const updatePackT = (cardsPack: {_id: string, name: string}) => (dispatch: Dispatch) => {\r\n    packsAPI.updatePack(cardsPack)\r\n        .then(() => {\r\n            dispatch(updatePackAC(cardsPack._id, cardsPack.name))\r\n        }).catch(() => console.log('update error'))\r\n};\r\nexport const setModalT = (modal: ModalType) => (dispatch: Dispatch) => {\r\n    dispatch(setModalAC(modal))\r\n};\r\nexport const setCurrentPackValuesT = (payload: CurrentPackValuesType) => (dispatch: Dispatch) => {\r\n    dispatch(setCurrentPackValuesAC(payload));\r\n};\r\n\r\nexport type PackType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n    deckCover?: string | null,\r\n}\r\nexport type CreatePackType = {\r\n    newCardsPack: PackType,\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type DeletePackType = {\r\n    deletedCardsPack: PackType,\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type UpdatePackType = {\r\n    updatedCardsPack: PackType,\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type PacksInitialStateType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n    currentModal: ModalType\r\n    currentPackValues: CurrentPackValuesType\r\n}\r\ntype  ActionsType = ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof addPackAC>\r\n    | ReturnType<typeof deletePackAC>\r\n    | ReturnType<typeof updatePackAC>\r\n    | ReturnType<typeof setModalAC>\r\n    | ReturnType<typeof setCurrentPackValuesAC>\r\n\r\ntype ModalType = '' | 'add' | 'update' | 'delete' | 'error';\r\n\r\nexport type CurrentPackValuesType = {\r\n    id: string;\r\n    name: string;\r\n}\r\n","import React, {useState, FC} from \"react\";\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport styles from './CustomModal.module.css';\r\nimport {useFormik} from \"formik\";\r\nimport {registerTC} from \"../../../../n2-faetures/f1-auth/a2-register/r2-bll/register-reducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\ntype ModalDescriptionType = {\r\n    title: string;\r\n    value?: string;\r\n}\r\n\r\ntype PropsType = {\r\n    heading: string;\r\n    fields: Array<ModalDescriptionType>;\r\n    showModal: boolean;\r\n    callback?: (a?: any, b?: any) => any;\r\n    isEditFields?: boolean;\r\n    isClientError?: boolean;\r\n    isServerError?: boolean;\r\n    packId?: string;\r\n}\r\n\r\nexport const CustomModal: FC<PropsType> = ({\r\n                                               showModal, heading, callback,\r\n                                               fields, isClientError,\r\n                                               isEditFields, isServerError, packId\r\n                                           }) => {\r\n    const initialValues: any = {};\r\n\r\n    fields.forEach(({title, value}) => initialValues[title] = value)\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: values => {\r\n            console.log(values)\r\n            if (callback) {\r\n                packId ? callback(packId, values) : values ? callback(values) : callback();\r\n            }\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(showModal);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={open}>\r\n                <div className={classes.paper}>\r\n                    <h2 id=\"transition-modal-title\">{heading}</h2>\r\n\r\n                    {!isEditFields ? fields.map(({title, value}) => <p><span>{title}</span> {value}</p>) :\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            {\r\n                                fields.map(({title, value}) => <p><span>{title}</span> <textarea\r\n                                    id={title}\r\n                                    name={title}\r\n                                    value={formik.values[title]}\r\n                                    onChange={formik.handleChange}\r\n                                /></p>)\r\n                            }\r\n                            <button type={\"submit\"} onClick={handleClose}>Save</button>\r\n                        </form>\r\n                    }\r\n                </div>\r\n            </Fade>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {CurrentPackValuesType, PackType} from '../p2-bll/packs-reducer';\r\nimport {CustomModal} from \"../../../../n1-main/m1-ui/common/Modal/CustomModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../n1-main/m2-bll/store\";\r\n\r\ntype PacksTablePropsType = {\r\n    packs: Array<PackType>\r\n    addPack: (nameObj:{name: string}) => void\r\n    deletePack: (pack: PackType | Array<PackType>) => void\r\n    updatePacks: (updateObj: {_id: string, name: string}) => void\r\n    goToCards: (pack: PackType | Array<PackType>) => void\r\n    showLearnCard: (pack: PackType | Array<PackType>) => void\r\n    onAddPackHandler: () => void\r\n    onUpdatePackHandler: (pack: PackType | Array<PackType>) => void\r\n}\r\n\r\nexport const PacksTable: React.FC<PacksTablePropsType> = ({packs, addPack, deletePack, goToCards, updatePacks,\r\n                                                          onAddPackHandler, onUpdatePackHandler, showLearnCard}) => {\r\n\r\n    const currentModal = useSelector<AppRootStateType>(state => state.packs.currentModal);\r\n    const currentPackValues = useSelector<AppRootStateType, CurrentPackValuesType>(state => state.packs.currentPackValues);\r\n\r\n    let displayModal;\r\n    switch (currentModal) {\r\n        case 'add':\r\n            displayModal = <CustomModal\r\n                heading={'Add new pack'}\r\n                fields={[{title: 'Name'}]}\r\n                showModal={true}\r\n                isEditFields={true}\r\n                callback={(values) => addPack({name: values.Name})}\r\n            />;\r\n            break;\r\n        case 'delete':\r\n            displayModal = <CustomModal\r\n                heading={'Delete card'}\r\n                fields={[{title: 'Are you sure?'}]}\r\n                showModal={true}\r\n                isEditFields={false}\r\n            />;\r\n            break;\r\n        case 'error':\r\n            displayModal = <CustomModal\r\n                heading={'Error!'}\r\n                fields={[{title: 'Error!'}]}\r\n                showModal={true}\r\n                isEditFields={false}\r\n            />;\r\n            break;\r\n        case 'update':\r\n            displayModal = <CustomModal\r\n                heading={'Update card'}\r\n                fields={[{title: 'Name', value: currentPackValues.name}]}\r\n                packId={currentPackValues.id}\r\n                showModal={true}\r\n                isEditFields={true}\r\n                callback={(_id, values) => updatePacks({_id, name: values.Name})}\r\n            />;\r\n            break;\r\n        default:\r\n            displayModal = '';\r\n    }\r\n    return (\r\n        <>\r\n            {displayModal}\r\n        <MaterialTable\r\n            title=\"CardPacks\"\r\n            columns={[\r\n                {\r\n                    title: 'Name', field: 'name',\r\n                    headerStyle: {\r\n                        width: '10%'\r\n                    },\r\n                    cellStyle: {\r\n                        width: '10%'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'CardsCount', field: 'cardsCount', type: 'numeric',\r\n                    headerStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                    cellStyle: {\r\n                        textAlign: 'center',\r\n                        width: '20%'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Updated', field: 'updated',\r\n                    headerStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                    cellStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Url', field: 'url', type: 'numeric',\r\n                    headerStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                    cellStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                },\r\n            ]}\r\n            data={packs}\r\n            actions={[\r\n                {\r\n                    icon: 'storage',\r\n                    tooltip: 'Learn Card',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        showLearnCard(data)\r\n                    }\r\n                },\r\n                {\r\n                    icon: 'add',\r\n                    tooltip: 'Add Pack',\r\n                    isFreeAction: true,\r\n                    onClick: (event) => onAddPackHandler(),\r\n                },\r\n                {\r\n                    icon: 'create',\r\n                    tooltip: 'Update pack',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        onUpdatePackHandler(data)\r\n                    }\r\n                },\r\n                {\r\n                    icon: 'forum',\r\n                    tooltip: 'Cards',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        goToCards(data)\r\n                    }\r\n                },\r\n                {\r\n                    icon: 'delete',\r\n                    tooltip: 'Delete pack',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        deletePack(data)\r\n                    }\r\n                },\r\n            ]}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: '#01579b',\r\n                    color: '#FFF',\r\n                },\r\n\r\n                actionsColumnIndex: -1\r\n            }}\r\n            style={{\r\n                width: '95%',\r\n                margin: '20px auto'\r\n            }}\r\n        />\r\n        </>\r\n    )\r\n};\r\n","import React, {ChangeEvent} from 'react';\r\nimport style from './Checkbox.module.css'\r\n\r\nexport type CheckboxPropsType = {\r\n    checkboxValue: boolean\r\n    changeValue: (value: boolean) => void\r\n}\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = React.memo((props) => {\r\n\r\n    const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.changeValue(e.currentTarget.checked)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\"\r\n                   className={`${style.optionInput} ${style.radio}`}\r\n                   checked={props.checkboxValue}\r\n                   onChange={changeStatus}\r\n            />\r\n        </div>\r\n    )\r\n});\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    addPackT,\r\n    deletePackT,\r\n    PackType,\r\n    requestPacksT,\r\n    setCurrentPackValuesT,\r\n    setModalT,\r\n    updatePackT\r\n} from '../p2-bll/packs-reducer';\r\nimport {AppRootStateType} from '../../../../n1-main/m2-bll/store';\r\nimport {CARDS, LEARN} from '../../../../n1-main/m1-ui/routes/Routes';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {PacksTable} from './PacksTable';\r\nimport {Checkbox} from '../../../../n1-main/m1-ui/common/Checkbox/Checkbox';\r\n\r\nexport const PacksContainer = () => {\r\n\r\n\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.cardPacks);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(requestPacksT());\r\n    }, [dispatch]);\r\n\r\n\r\n    const showLearnCard = useCallback((pack: PackType | Array<PackType>) => {\r\n        !Array.isArray(pack) && history.push(LEARN + '/' + pack._id)\r\n    }, []);\r\n\r\n    const goToCards = useCallback((pack: PackType | Array<PackType>) => {\r\n        !Array.isArray(pack) && history.push(CARDS + '/' + pack._id)\r\n    }, []);\r\n\r\n    const addPack = (nameObj: { name: string }) => {\r\n        dispatch(addPackT(nameObj));\r\n        dispatch(setModalT(''));\r\n    };\r\n\r\n    const onAddPackHandler = () => {\r\n        dispatch(setModalT('add'));\r\n    }\r\n\r\n    const deletePack = (pack: PackType | Array<PackType>) => {\r\n        if (!Array.isArray(pack)) {\r\n            dispatch(deletePackT(pack._id))\r\n        }\r\n    };\r\n\r\n    const updatePacks = (updateObj: { _id: string, name: string }) => {\r\n        dispatch(updatePackT(updateObj));\r\n    };\r\n\r\n    const onUpdatePackHandler = (pack: PackType | Array<PackType>) => {\r\n        if (!Array.isArray(pack)) {\r\n            dispatch(setModalT('update'));\r\n            dispatch(setCurrentPackValuesT({\r\n                id: pack._id,\r\n                name: pack.name,\r\n            }));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Checkbox checkboxValue={true} changeValue={(value => console.log(value))}/>\r\n                My Packs\r\n            </div>\r\n            <PacksTable packs={packs} addPack={addPack}\r\n                        deletePack={deletePack} goToCards={goToCards}\r\n                        updatePacks={updatePacks}\r\n                        onAddPackHandler={onAddPackHandler}\r\n                        onUpdatePackHandler={onUpdatePackHandler}\r\n                        showLearnCard={showLearnCard}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport styles from './PacksPage.module.css'\r\nimport {PacksContainer} from '../../../n2-faetures/f2-cardPacks/c1-packs/p1-ui/PacksContainer';\r\n\r\nexport const PacksPage = () => {\r\n    return (\r\n        <div>\r\n            <div>PacksPage</div>\r\n            <div className={styles.bodyTable}>\r\n                <PacksContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const CardsApi = {\r\n    getCards(cardsPack_id: string, cardAnswer?: string, cardQuestion?: string, min?: number,\r\n             max?: number, shortCards?: string, grade?: number, page?: number, pageCount?: number) {\r\n        return instance.get(`cards/card`, {\r\n            params: {\r\n                cardsPack_id,\r\n                cardAnswer,\r\n                cardQuestion,\r\n                min,\r\n                max,\r\n                shortCards,\r\n                grade,\r\n                page,\r\n                pageCount,\r\n            }\r\n        });\r\n    },\r\n\r\n    addCard(cardsPack_id: string, question?: string, answer?: string, grade?: number,\r\n            shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n            questionVideo?: string, answerVideo?: string, type?: string) {\r\n        return instance.post(`cards/card`, {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer,\r\n                grade,\r\n                shots,\r\n                rating,\r\n                answerImg,\r\n                questionImg,\r\n                questionVideo,\r\n                answerVideo,\r\n                type,\r\n            }\r\n        })\r\n    },\r\n\r\n    deleteCard(id: string) {\r\n        return instance.delete('cards/card', {\r\n            params: {\r\n                id,\r\n            }\r\n        });\r\n    },\r\n\r\n    updateCard(id: string, question?: string, answer?: string, grade?: number,\r\n               shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n               questionVideo?: string, answerVideo?: string, type?: string, comments?: string) {\r\n        return instance.put('cards/card', {\r\n            card: {\r\n                _id: id,\r\n                question,\r\n                answer,\r\n                grade,\r\n                shots,\r\n                rating,\r\n                answerImg,\r\n                questionImg,\r\n                questionVideo,\r\n                answerVideo,\r\n                type,\r\n                comments,\r\n            }\r\n        })\r\n    }\r\n}\r\n","import {AnyAction, Dispatch} from 'redux';\r\nimport {CardsApi} from '../c3-dal/cards-api';\r\n\r\nconst SET_CARDS: 'SET_CARDS' = 'SET_CARDS';\r\nconst ADD_CARD: 'ADD_CARD' = 'ADD_CARD';\r\nconst DELETE_CARD: 'DELETE_CARD' = 'DELETE_CARD';\r\nconst UPDATE_CARD: 'UPDATE_CARD' = 'UPDATE_CARD';\r\nconst SET_CARDS_PACK_ID: 'SET_CARDS_PACK_ID' = 'SET_CARDS_PACK_ID';\r\nconst UPDATE_CARD_GRADE: 'UPDATE_CARD_GRADE' = 'UPDATE_CARD_GRADE';\r\n\r\n\r\nconst SET_ERROR: 'SET_ERROR' = 'SET_ERROR';\r\nconst SET_FETCHING: 'SET_FETCHING' = 'SET_FETCHING';\r\nconst SET_MODAL: 'SET_MODAL' = 'SET_MODAL';\r\nconst SET_CURRENT_CARD_VALUES: 'SET_CURRENT_CARD_VALUES' = 'SET_CURRENT_CARD_VALUES';\r\n\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    user_id: string;\r\n    answer: string;\r\n    question: string\r\n    grade: number;\r\n    shots: number;\r\n    comments: string;\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n    created: string;\r\n    updated: string;\r\n    __v: number;\r\n}\r\ntype CardForSendType = {\r\n    cardsPack_id: string;\r\n    question?: string;\r\n    answer?: string;\r\n    grade?: number;\r\n    shots?: number;\r\n    rating?: number;\r\n    answerImg?: string;\r\n    questionImg?: string;\r\n    questionVideo?: string;\r\n    answerVideo?: string;\r\n    type?: string;\r\n}\r\n\r\ntype CardForUpdateType = {\r\n    object: CardForSendType\r\n    comments: string;\r\n}\r\n\r\ntype ModalType = '' | 'add' | 'update' | 'delete' | 'error';\r\n\r\nexport type CurrentCardValuesType = {\r\n    id: string;\r\n    question: string;\r\n    answer: string;\r\n}\r\n// type InitialStateType = {\r\n//     isError: boolean;\r\n//     isFetching: boolean;\r\n//     cardsPack_id: string;\r\n//     cards: Array<CardType>;\r\n//     currentModal: ModalType ;\r\n// }\r\n\r\nconst initialState = {\r\n    isError: false,\r\n    isFetching: false,\r\n    cardsPack_id: '',\r\n    cards: [{\r\n        _id: '',\r\n        cardsPack_id: '',\r\n        user_id: '',\r\n        answer: '',\r\n        question: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        comments: '',\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n        created: '',\r\n        updated: '',\r\n        __v: 0,\r\n    }],\r\n    currentModal: '',\r\n    currentCardValues: {\r\n        id: '',\r\n        question: '',\r\n        answer: '',\r\n    }\r\n};\r\ntype InitialStateType = typeof initialState;\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.isError,\r\n            };\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        case ADD_CARD:\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state,\r\n            };\r\n        case DELETE_CARD:\r\n            return {\r\n                ...state,\r\n            };\r\n        case SET_CARDS_PACK_ID:\r\n            return {\r\n                ...state,\r\n                cardsPack_id: action.id,\r\n            }\r\n        case SET_MODAL:\r\n            return {\r\n                ...state,\r\n                currentModal: action.modal,\r\n            }\r\n        case SET_CURRENT_CARD_VALUES:\r\n            return {\r\n                ...state,\r\n                currentCardValues: {\r\n                    ...state.currentCardValues,\r\n                    ...action.payload,\r\n                },\r\n            }\r\n        case UPDATE_CARD_GRADE: {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.payload.id ? {...card, grade: action.payload.grade} : {...card})\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setCardsAC = (cards: Array<CardType>) => ({type: SET_CARDS, cards} as const);\r\nconst addCardAC = (payload: CardForSendType) => ({type: ADD_CARD, payload} as const);\r\nconst deleteCardAC = (id: string) => ({type: DELETE_CARD, id} as const);\r\nconst updateCardAC = (payload: CardForUpdateType) => ({type: UPDATE_CARD, payload} as const);\r\nconst setCardsPackIdAC = (id: string) => ({type: SET_CARDS_PACK_ID, id} as const);\r\nexport const updateCardGradeAC = (payload: { id: string, grade: number }) => ({\r\n    type: UPDATE_CARD_GRADE,\r\n    payload\r\n} as const);\r\n\r\n\r\nconst setErrorAC = (isError: boolean) => ({type: SET_ERROR, isError} as const);\r\nconst setFetchingAC = (isFetching: boolean) => ({type: SET_FETCHING, isFetching} as const);\r\nconst currentModalAC = (modal: ModalType) => ({type: SET_MODAL, modal} as const);\r\nconst setCurrentCardValuesAC = (payload: CurrentCardValuesType) => ({type: SET_CURRENT_CARD_VALUES, payload} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setCardsAC | typeof setErrorAC | typeof setFetchingAC |\r\n    typeof addCardAC | typeof deleteCardAC | typeof updateCardAC | typeof setCardsPackIdAC |\r\n    typeof currentModalAC | typeof setCurrentCardValuesAC | typeof updateCardGradeAC>\r\n\r\n\r\nexport const setCardsTC = (cardsPack_id: string, cardAnswer?: string, cardQuestion?: string,\r\n                           min?: number, max?: number, shortCards?: string, grade?: number,\r\n                           page?: number, pageCount?: number\r\n) => (dispatch: Dispatch) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.getCards(cardsPack_id, cardAnswer, cardQuestion, min, max, shortCards, grade, page,\r\n        pageCount)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const addCardTC = (cardsPack_id: string, question?: string, answer?: string, grade?: number,\r\n                          shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n                          questionVideo?: string, answerVideo?: string, type?: string\r\n) => (dispatch: any, getState: any) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.addCard(cardsPack_id, question, answer, grade,\r\n        shots, rating, answerImg, questionImg,\r\n        questionVideo, answerVideo, type)\r\n        .then(res => {\r\n            dispatch(setCardsTC(getState().cards.cardsPack_id, undefined, undefined,\r\n                undefined, undefined, undefined, undefined, undefined,\r\n                20));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const deleteCardTC = (id: string) => (dispatch: any, getState: any) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(setCardsTC(getState().cards.cardsPack_id, undefined, undefined,\r\n                undefined, undefined, undefined, undefined, undefined,\r\n                20));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const updateCardTC = (id: string, question?: string, answer?: string, grade?: number,\r\n                             shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n                             questionVideo?: string, answerVideo?: string, type?: string, comments?: string\r\n) => (dispatch: any, getState: any) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.updateCard(id, question, answer, grade,\r\n        shots, rating, answerImg, questionImg,\r\n        questionVideo, answerVideo, type, comments)\r\n        .then(res => {\r\n            dispatch(setCardsTC(getState().cards.cardsPack_id));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const setCardsPackIdTC = (cardsPackId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setCardsPackIdAC(cardsPackId));\r\n}\r\n\r\nexport const toggleModalTC = (modal: ModalType) => (dispatch: Dispatch) => {\r\n    dispatch(currentModalAC(modal))\r\n};\r\n\r\nexport const setCurrentCardValuesTC = (payload: CurrentCardValuesType) => (dispatch: Dispatch) => {\r\n    dispatch(setCurrentCardValuesAC(payload));\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nimport {AppRootStateType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {\r\n    addCardTC,\r\n    CardType, CurrentCardValuesType,\r\n    deleteCardTC,\r\n    setCardsPackIdTC,\r\n    setCardsTC, setCurrentCardValuesTC,\r\n    toggleModalTC,\r\n    updateCardTC\r\n} from \"../c2-bll/cards-reduser\";\r\nimport {CustomModal} from \"../../../../n1-main/m1-ui/common/Modal/CustomModal\";\r\n\r\ntype DisplayCardType = {\r\n    _id: string;\r\n    question: string;\r\n    answer: string;\r\n    grade: number;\r\n    updated: string;\r\n    url: string;\r\n}\r\n\r\nexport const CardsTable = () => {\r\n    const {buttonContainer} = styles;\r\n\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards);\r\n    const cardsPack_id = useSelector<AppRootStateType, string>(state => state.cards.cardsPack_id);\r\n    const currentModal = useSelector<AppRootStateType>(state => state.cards.currentModal);\r\n    const currentCardValues = useSelector<AppRootStateType, CurrentCardValuesType>(state => state.cards.currentCardValues);\r\n    const dispatch = useDispatch();\r\n\r\n    const {location} = useHistory();\r\n    const cardsPackIdParams = location.pathname.substring(7);\r\n\r\n    dispatch(setCardsPackIdTC(cardsPackIdParams));\r\n\r\n    const onCardAdd = (cardsPack_id: string, question?: string, answer?: string, grade?: number,\r\n                       shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n                       questionVideo?: string, answerVideo?: string, type?: string) => {\r\n        dispatch(addCardTC(cardsPack_id, question, answer, grade, shots, rating, answerImg, questionImg,\r\n            questionVideo, answerVideo, type));\r\n        dispatch(toggleModalTC(''));\r\n    }\r\n\r\n    const onAddCardHandler = () => {\r\n        dispatch(toggleModalTC('add'));\r\n    }\r\n\r\n    const onUpdateCardHandler = (card: DisplayCardType | Array<DisplayCardType>) => {\r\n        if (!Array.isArray(card)) {\r\n            dispatch(toggleModalTC('update'));\r\n            dispatch(setCurrentCardValuesTC({\r\n                id: card._id,\r\n                question: card.question,\r\n                answer: card.answer,\r\n            }));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (cardsPackIdParams) {\r\n            dispatch(setCardsTC(cardsPackIdParams, undefined,\r\n                undefined, undefined, undefined, undefined, undefined, undefined, 20))\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n    const onCardUpdate = (cardId: string, question: string, answer: string, grade?: number): void => {\r\n        dispatch(updateCardTC(cardId, question, answer, grade));\r\n        dispatch(toggleModalTC(''));\r\n    }\r\n\r\n    const onCardDelete = (card: DisplayCardType | Array<DisplayCardType>): void => {\r\n        !Array.isArray(card) && dispatch(deleteCardTC(card._id))\r\n    }\r\n\r\n\r\n    const cardsForDisplay: Array<DisplayCardType> = cards.map(({_id, question, answer, grade, updated}) => ({\r\n        _id, question,\r\n        answer, grade, updated, url: '',\r\n    }));\r\n\r\n    let displayModal;\r\n    switch (currentModal) {\r\n        case 'add':\r\n            displayModal = <CustomModal\r\n                heading={'Add new card'}\r\n                fields={[{title: 'Question'}, {title: 'Answer'}]}\r\n                showModal={true}\r\n                isEditFields={true}\r\n                packId={cardsPack_id}\r\n                callback={(cardPack_id, values) => onCardAdd(cardsPack_id, values.Question, values.Answer)}\r\n            />;\r\n            break;\r\n        case 'delete':\r\n            displayModal = <CustomModal\r\n                heading={'Delete card'}\r\n                fields={[{title: 'Are you sure?'}]}\r\n                showModal={true}\r\n                isEditFields={false}\r\n            />;\r\n            break;\r\n        case 'error':\r\n            displayModal = <CustomModal\r\n                heading={'Error!'}\r\n                fields={[{title: 'Error!'}]}\r\n                showModal={true}\r\n                isEditFields={false}\r\n            />;\r\n            break;\r\n        case 'update':\r\n            displayModal = <CustomModal\r\n                heading={'Update card'}\r\n                fields={[{title: 'Question', value: currentCardValues.question},\r\n                    {title: 'Answer', value: currentCardValues.answer}]}\r\n                packId={currentCardValues.id}\r\n                showModal={true}\r\n                isEditFields={true}\r\n                callback={(_id, values) => onCardUpdate(_id, values.Question, values.Answer)}\r\n            />;\r\n            break;\r\n        default:\r\n            displayModal = '';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayModal\r\n            }\r\n            <MaterialTable\r\n                title=\"Cards\"\r\n                columns={[\r\n                    {title: 'Question', field: 'question', type: \"string\"},\r\n                    {title: 'Answer', field: 'answer'},\r\n                    {title: 'Grade', field: 'grade', type: \"numeric\"},\r\n                    {title: 'Updated', field: 'updated', type: 'numeric'},\r\n                    {title: 'Url', field: 'url', type: 'numeric'},\r\n                ]}\r\n                data={cardsForDisplay}\r\n                actions={[\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: 'Add Card',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => onAddCardHandler()\r\n                    },\r\n                    {\r\n                        icon: 'delete',\r\n                        tooltip: 'Delete packs',\r\n                        onClick: (event, data: DisplayCardType | Array<DisplayCardType>) => onCardDelete(data)\r\n                    },\r\n                    {\r\n                        icon: 'update',\r\n                        tooltip: 'Update packs',\r\n                        // onClick: (event, data: DisplayCardType | Array<DisplayCardType>) => onCardUpdate(data)\r\n                        onClick: (event, data: DisplayCardType | Array<DisplayCardType>) => onUpdateCardHandler(data),\r\n                    },\r\n\r\n                ]}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: '#01579b',\r\n                        color: '#FFF',\r\n                        width: '90%'\r\n                    },\r\n                    actionsColumnIndex: -1\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, memo} from 'react';\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport styles from './Slider.module.css'\r\n\r\ntype PropsType = {\r\n    name: string;\r\n    defaultValue?: number | Array<number>;\r\n    disabled?: boolean;\r\n    min: number;\r\n    max: number;\r\n    orientation?: 'horizontal' | 'vertical';\r\n    step: number;\r\n    onChange: (value: number | number[]) => void;\r\n    valueLabelDisplay: 'on' | 'auto' | 'off';\r\n}\r\n\r\nexport const CustomSlider = memo((props: PropsType) => {\r\n    const {container} = styles;\r\n    const {defaultValue, disabled, max, min, orientation, step, onChange, name, valueLabelDisplay} = props;\r\n\r\n    const [sliderValue, setSliderValue] = useState(defaultValue);\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        setSliderValue(newValue);\r\n        onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={container}>\r\n            <p>{name}</p>\r\n            <Slider\r\n                value={sliderValue}\r\n                onChange={handleChange}\r\n                min={min}\r\n                max={max}\r\n                step={step}\r\n                disabled={disabled}\r\n                orientation={orientation}\r\n                valueLabelDisplay={valueLabelDisplay}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport stales from './CardsPage.module.css'\r\nimport {CardsTable} from '../../../n2-faetures/f2-cardPacks/c2-cards/c1-ui/Cards';\r\nimport {CustomSlider} from '../common/Cards/Slider/Slider';\r\n\r\nexport const CardsPage = () => {\r\n    return (\r\n        <>\r\n            <div>CardsPage</div>\r\n            <CustomSlider\r\n                name={'Cards slider'}\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                disabled={false}\r\n                defaultValue={[10, 20]}\r\n                onChange={(value) => console.log(value)}\r\n                valueLabelDisplay={'auto'}\r\n            />\r\n            <CardsTable/>\r\n        </>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport style from './Button.module.css'\r\n\r\nexport type ButtonPropsType = {\r\n    click: () => void\r\n    value: string\r\n    red?: string\r\n}\r\n\r\n\r\nexport const ButtonString: React.FC<ButtonPropsType> = React.memo(({red, value, click}) => {\r\n    return (\r\n        <>\r\n            <button className={red === 'delete' ? `${style.button} ${style.type}` : style.button}\r\n                    onClick={click}\r\n                    disabled={false}\r\n            >{value}</button>\r\n        </>\r\n    )\r\n});\r\n","import React from 'react'\r\nimport styles from './FrontPartCard.module.css'\r\nimport {CardType} from '../../s2-bll/selectCard-reducer';\r\nimport {ButtonString} from '../../../../../n1-main/m1-ui/common/Button/ButtonString';\r\n\r\ntype FrontPartCardPropsType = {\r\n    onCheck: () => void\r\n    card: CardType\r\n}\r\n\r\nexport const FrontPartCard: React.FC<FrontPartCardPropsType> = React.memo(({onCheck, card}) => {\r\n\r\n    return (\r\n        <div className={styles.frontCardBody}>\r\n            <h3>Question</h3>\r\n            <div>\r\n                <p>{card.question}</p>\r\n            </div>\r\n            <ButtonString value={'проверить'} click={onCheck}/>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport style from './Button.module.css'\r\nimport {gradesType} from '../../../../n2-faetures/f3-learnCards/l1-selectedCard/s1-ui/BackPartCard/BackPartCard';\r\n\r\nexport type ButtonPropsType = {\r\n    click: (value: number) => void\r\n    value: gradesType\r\n    red?: string\r\n}\r\n\r\n\r\nexport const Button: React.FC<ButtonPropsType> = React.memo(({red, value, click}) => {\r\n    return (\r\n        <>\r\n            <button className={red === 'delete' ? `${style.button} ${style.type}` : style.button}\r\n                    onClick={() => click(value.value) }\r\n                    disabled ={false}\r\n            >{value.title}</button>\r\n        </>\r\n    )\r\n});\r\n","import React from 'react'\r\nimport {Button} from '../../../../../n1-main/m1-ui/common/Button/Button';\r\nimport {CardType} from '../../s2-bll/selectCard-reducer';\r\nimport {ButtonString} from '../../../../../n1-main/m1-ui/common/Button/ButtonString';\r\n\r\n\r\ntype BackPartCardPropsType = {\r\n    onNext: () => void\r\n    card: CardType\r\n    click: (value: number) => void\r\n}\r\nexport type gradesType = {\r\n    value: number\r\n    title: string\r\n}\r\nconst grades: Array<gradesType> = [\r\n    {value: 1, title: 'не знал'},\r\n    {value: 2, title: 'забыл'},\r\n    {value: 3, title: 'долго думал'},\r\n    {value: 4, title: 'перепутал'},\r\n    {value: 5, title: 'знал'}\r\n];\r\n\r\nexport const BackPartCard: React.FC<BackPartCardPropsType> = React.memo(({onNext, card, click}) => {\r\n    return (\r\n        <div>\r\n            <h3>Answer</h3>\r\n            <div>\r\n                <p>{card.answer}</p>\r\n            </div>\r\n            <div>\r\n                {\r\n                    grades.map((value, index) => (<Button key={'value-' + index} value={value} click={click}/>))}\r\n            </div>\r\n            <ButtonString value={'следующая карта'} click={onNext}/>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const cardAPI = {\r\n    sendCardGrade(grade: number, card_id: string) {\r\n        return instanse.put<CardGradeType>('cards/grade', {grade, card_id})\r\n            .then(res => res.data.updatedGrade)\r\n    }\r\n};\r\n\r\ntype CardGradeType = {\r\n    updatedGrade: {\r\n        card_id: string\r\n        cardsPack_id: string\r\n        created: string\r\n        grade: number\r\n        more_id: string\r\n        shots: number\r\n        updated: string\r\n        user_id: string\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {cardAPI} from '../s3-dal/selectCard-api';\r\nimport {updateCardGradeAC} from '../../../f2-cardPacks/c2-cards/c2-bll/cards-reduser';\r\n\r\nconst ADD_NEXT_CARD = 'selectCard/ADD_NEXT_CARD';\r\n\r\n\r\nconst initialState: CardType = {\r\n    _id: 'fake',\r\n    cardsPack_id: '',\r\n    answer: 'answer fake',\r\n    question: 'question',\r\n    grade: 0,\r\n    shots: 0,\r\n    type: '',\r\n    rating: 0,\r\n    more_id: '',\r\n    created: '',\r\n    updated: '',\r\n    user_id: '',\r\n    comments: '',\r\n    __v: 0,\r\n};\r\n\r\nexport const cardReducer = (state: CardType = initialState, action: ActionsType): CardType => {\r\n    switch (action.type) {\r\n        case ADD_NEXT_CARD: {\r\n            return {\r\n                ...state, ...action.card\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nconst ActionsTypeAC = (card: CardType) => ({type: ADD_NEXT_CARD, card} as const);\r\n\r\n//thunks\r\nexport const addNewCardTC = (card: CardType) => (dispatch: Dispatch) => {\r\n    dispatch(ActionsTypeAC(card))\r\n};\r\nexport const updateCardGradeTC = (grade: number, cardId: string) => (dispatch: Dispatch) => {\r\n\r\n    cardAPI.sendCardGrade(grade, cardId)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.card_id);\r\n            console.log(res.grade);\r\n            let id = res.card_id;\r\n            let grade = res.grade;\r\n            dispatch(updateCardGradeAC({id, grade}));\r\n\r\n        })\r\n        .catch(() => console.log('same error'))\r\n};\r\n\r\n//types\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n    created: string;\r\n    updated: string;\r\n    user_id?: string;\r\n    comments?: string;\r\n    __v?: number;\r\n}\r\ntype ActionsType = ReturnType<typeof ActionsTypeAC>\r\n\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport stales from './SelectedCardContainer.module.css'\r\nimport {FrontPartCard} from './FrontPartCard/FrontPartCard';\r\nimport {BackPartCard} from './BackPartCard/BackPartCard';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../../n1-main/m2-bll/store';\r\nimport {setCardsTC} from '../../../f2-cardPacks/c2-cards/c2-bll/cards-reduser';\r\nimport {addNewCardTC, CardType, updateCardGradeTC} from '../s2-bll/selectCard-reducer';\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n\r\n    return cards[res.id + 1];\r\n};\r\n\r\ntype SelectedCardContainerPropsType = {}\r\nexport const SelectedCardContainer: React.FC<SelectedCardContainerPropsType> = React.memo((props) => {\r\n\r\n    const learnCard = useSelector<AppRootStateType, CardType >(state => state.card);\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>((store) => store.cards.cards);\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams();\r\n\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [first, setFirst] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        if (first) {\r\n            dispatch(setCardsTC(id));\r\n            setFirst(false)\r\n        }\r\n\r\n        if (cards.length > 0) {\r\n            dispatch(addNewCardTC(getCard(cards)))\r\n        }\r\n        return () => {\r\n            console.log('useEffect off');\r\n        }\r\n\r\n    }, [dispatch, id, cards, first]);\r\n\r\n\r\n    const onCheck = useCallback(() => {\r\n        setIsChecked(true);\r\n    }, [isChecked]);\r\n\r\n    const toSendRating = (grade: number) => {\r\n        let cardId = learnCard._id;\r\n        dispatch(updateCardGradeTC(grade, cardId))\r\n    };\r\n\r\n    const onNext = useCallback(() => {\r\n        setIsChecked(false)\r\n        if (cards.length > 0) {\r\n            dispatch(addNewCardTC(getCard(cards)))\r\n        }\r\n    }, [cards, dispatch]);\r\n\r\n\r\n\r\n    return (\r\n        <div className={stales.cardBody}>\r\n\r\n            <div>\r\n                <FrontPartCard onCheck={onCheck} card={learnCard}/>\r\n            </div>\r\n\r\n            {isChecked &&\r\n            <div>\r\n                <BackPartCard click={toSendRating} onNext={onNext} card={learnCard}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n});\r\n\r\n","import React from 'react'\r\nimport stales from './LearnPage.module.css'\r\nimport  {SelectedCardContainer}  from '../../../n2-faetures/f3-learnCards/l1-selectedCard/s1-ui/SelectedCardContainer'\r\n\r\nexport const LearnPage = React.memo(() => {\r\n\r\n    return (\r\n        <div className={stales.cardBody}>\r\n            LearnPage\r\n            <SelectedCardContainer/>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {Profile} from '../profile/Profile';\r\nimport {Login} from '../login/Login';\r\nimport {Registration} from '../../../n2-faetures/f1-auth/a2-register/r1-ui/RegisterPage';\r\nimport {RecoverPasswordPage} from '../../../n2-faetures/f1-auth/a3-recovery/rec1-ui/RecoverPasswordPage/RecoverPasswordPage';\r\nimport {NewPass} from '../newPassword/NewPass';\r\nimport {PacksPage} from '../Packs/PacksPage';\r\nimport {CardsPage} from '../CardsPage/CardsPage';\r\nimport {LearnPage} from '../learnPage/LearnPage';\r\n\r\nexport const PROFILE = '/';\r\nexport const LOGIN = '/login';\r\nexport const REGISTRATION = '/registration';\r\nexport const RECOVER_PASSWORD = '/recoverPassword';\r\nexport const NEW_PASS = '/newPass';\r\nexport const PACKS = '/packs';\r\nexport const CARDS = '/cards';\r\nexport const LEARN = '/learn';\r\n\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Route exact path={PROFILE} render={() => <Profile/>}/>\r\n            <Route path={LOGIN} render={() => <Login/>}/>\r\n            <Route path={REGISTRATION} render={() => <Registration/>}/>\r\n            <Route path={RECOVER_PASSWORD} render={() => <RecoverPasswordPage/>}/>\r\n            <Route path={NEW_PASS} render={() => <NewPass/>}/>\r\n            <Route path={PACKS} render={() => <PacksPage/>}/>\r\n            <Route path={CARDS} render={() => <CardsPage/>}/>\r\n            {/*<Route path={LEARN} render={() => <LearnPage/>}/>*/}\r\n            <Route path={'/learn/:id'} render={() => <LearnPage/>}/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useCallback} from 'react';\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CARDS, LEARN, LOGIN, NEW_PASS, PACKS, PROFILE, RECOVER_PASSWORD, REGISTRATION} from '../routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {Button} from '@material-ui/core';\r\nimport {logoutTC} from '../../../n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer';\r\n\r\nexport const Header = () => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [isLoggedIn]);\r\n\r\n    return (\r\n        <div className={styles.nav}>\r\n            <div className={styles.menu}>\r\n\r\n                <div className={styles.button}>\r\n                    {isLoggedIn && <Button variant=\"contained\" color=\"primary\" onClick={logoutHandler}>Log out</Button>}\r\n                </div>\r\n\r\n                <div className={styles.item}>\r\n                    <NavLink exact to={PROFILE} activeClassName={styles.activeLick}>Profile</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={LOGIN} activeClassName={styles.activeLick}>Login</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={REGISTRATION} activeClassName={styles.activeLick}>Registration</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={RECOVER_PASSWORD} activeClassName={styles.activeLick}>RecoverPassword</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={NEW_PASS} activeClassName={styles.activeLick}>NewPass</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={PACKS} activeClassName={styles.activeLick}>PacksPage</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={CARDS} activeClassName={styles.activeLick}>CardsPage</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={LEARN} activeClassName={styles.activeLick}>LearnPage</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport {Header} from '../header/Header';\r\nimport {Routes} from '../routes/Routes';\r\n\r\nexport const Main = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Main} from './main/Main';\r\n\r\ntype AppPropsType = {}\r\n\r\nexport const App: React.FC<AppPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <Main/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReduser = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE':\r\n            return {...state};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nexport const profileAC = () => ({type: 'PROFILE'} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof profileAC>\r\n","const initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_IS_LOGGET_IN':\r\n            return {...state};\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setIsLoggedInAC = () => ({type: 'SET_IS_LOGGET_IN'} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n","const initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_NEW_PASSWORD':\r\n            return {...state};\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\n// actions\r\nexport const newPassworddAC = () => ({type: 'SET_NEW_PASSWORD'} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof newPassworddAC>\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {profileReduser} from './profile-reducer';\r\nimport {loginReducer} from './login-reducer';\r\nimport {newPasswordReducer} from './newPassword-reducer';\r\nimport {registrationReducer} from '../../n2-faetures/f1-auth/a2-register/r2-bll/register-reducer';\r\nimport {recoverPasswordReducer} from '../../n2-faetures/f1-auth/a3-recovery/rec2-bll/recover-password-reducer';\r\nimport {authReducer} from '../../n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport { packsReduser } from '../../n2-faetures/f2-cardPacks/c1-packs/p2-bll/packs-reducer';\r\nimport {cardsReducer} from \"../../n2-faetures/f2-cardPacks/c2-cards/c2-bll/cards-reduser\";\r\nimport {cardReducer} from '../../n2-faetures/f3-learnCards/l1-selectedCard/s2-bll/selectCard-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    registration: registrationReducer,\r\n    newPassword: newPasswordReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    login: loginReducer,\r\n    profile: profileReduser,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    cards: cardsReducer,\r\n    packs: packsReduser,\r\n    card: cardReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './n1-main/m1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './n1-main/m2-bll/store';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3CMgV\",\"type\":\"Button_type__NuwvW\"};"],"sourceRoot":""}