{"version":3,"sources":["n2-faetures/f1-auth/a1-login/l1-ui/LoginForm/LoginForm.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/Preloader/Preloader.module.css","n1-main/m1-ui/assets/images/loader.svg","n1-main/m1-ui/profile/Profile.module.css","n2-faetures/f1-auth/a2-register/r1-ui/Preloader/Spin-1s.svg","n1-main/m1-ui/Packs/PacksPage.module.css","n2-faetures/f2-cardPacks/c2-cards/c1-ui/Cards.module.css","n1-main/m1-ui/common/Cards/Slider/Slider.module.css","n0-config/config.ts","n2-faetures/f1-auth/a1-login/l3-dal/cards-api.ts","n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer.ts","n1-main/m2-bll/app-reducer.tsx","n1-main/m1-ui/common/Preloader/Preloader.tsx","n1-main/m1-ui/profile/Profile.tsx","n2-faetures/f1-auth/a1-login/l1-ui/LoginForm/Login.tsx","n2-faetures/f1-auth/a1-login/l1-ui/LoginForm/LoginFormContainer.tsx","n2-faetures/f1-auth/a1-login/l1-ui/LoginPage.tsx","n1-main/m1-ui/login/Login.tsx","n2-faetures/f1-auth/a2-register/r3-dal/cards-reduser-api.ts","n2-faetures/f1-auth/a2-register/r2-bll/register-reducer.ts","n2-faetures/f1-auth/a2-register/r1-ui/Preloader/Preloader.tsx","n2-faetures/f1-auth/a2-register/r1-ui/RegisterPage.tsx","n2-faetures/f1-auth/a3-recovery/rec3-dal/recoveryApi.ts","n2-faetures/f1-auth/a3-recovery/rec2-bll/recover-password-reducer.ts","n2-faetures/f1-auth/a3-recovery/rec1-ui/RecoverPasswordPage/RecoverPasswordPage.tsx","n1-main/m1-ui/newPassword/NewPass.tsx","n2-faetures/f2-cardPacks/c1-packs/p3-dal/packs-api.ts","n2-faetures/f2-cardPacks/c1-packs/p2-bll/packs-reducer.ts","n2-faetures/f2-cardPacks/c1-packs/p1-ui/PacksTable.tsx","n2-faetures/f2-cardPacks/c1-packs/p1-ui/PacksContainer.tsx","n1-main/m1-ui/Packs/PacksPage.tsx","n2-faetures/f2-cardPacks/c2-cards/c3-dal/cards-api.ts","n2-faetures/f2-cardPacks/c2-cards/c2-bll/cards-reduser.ts","n2-faetures/f2-cardPacks/c2-cards/c1-ui/Cards.tsx","n1-main/m1-ui/common/Cards/Slider/Slider.tsx","n1-main/m1-ui/CardsPage/CardsPage.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/main/Main.tsx","n1-main/m1-ui/App.tsx","serviceWorker.ts","n1-main/m2-bll/profile-reducer.ts","n1-main/m2-bll/login-reducer.ts","n1-main/m2-bll/newPassword-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","BACK_URL","instanse","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","user","isLoggedIn","error","setIsLoginInAC","value","type","setUserAC","setAppErrorAC","status","isInitialized","setAppStatusAC","Preloader","props","className","styles","loader","src","preloader","Profile","React","memo","useSelector","state","auth","app","dispatch","useDispatch","useEffect","then","res","catch","container","email","token","publicCardPacksCount","to","Login","formik","useFormik","initialValues","password","rememberMe","validate","values","errors","length","test","onSubmit","e","response","message","Grid","justify","item","xs","style","color","toString","handleSubmit","FormControl","FormGroup","TextField","label","margin","getFieldProps","FormControlLabel","control","Checkbox","checked","Button","variant","link","RECOVER_PASSWORD","activeClassName","activeLick","REGISTRATION","LoginFormContainer","LoginPage","instance","RegistrationApi","isRegistered","isError","isFetching","setFetchingAC","alt","Registration","registration","err","registerTC","id","name","onChange","handleChange","onBlur","handleBlur","htmlFor","touched","disabled","RecoverApi","from","SET_ACCEPTED","isAccepted","recoverTC","RecoverPasswordPage","recoverPassword","NewPass","packsAPI","pageCount","get","cardPacks","cardsPack","newCardsPack","deletedCardsPack","put","cardsCount","created","grade","more_id","path","private","rating","shots","updated","user_id","user_name","__v","_id","deckCover","cardPacksTotalCount","maxCardsCount","minCardsCount","page","tokenDeathTime","PacksTable","packs","addPack","deletePack","goToCards","updatePacks","title","columns","field","headerStyle","width","cellStyle","textAlign","actions","icon","tooltip","isFreeAction","onClick","event","options","backgroundColor","actionsColumnIndex","PacksContainer","history","useHistory","console","log","pack","Array","isArray","deletePackAC","push","CARDS","PacksPage","bodyTable","CardsApi","cardsPack_id","cardAnswer","cardQuestion","min","max","shortCards","params","question","answer","answerImg","questionImg","questionVideo","answerVideo","card","comments","cards","setErrorAC","setCardsTC","CardsTable","buttonContainer","cardsPackId","cardsPackIdParams","location","pathname","substring","onCardAdd","getState","undefined","addCardTC","onCardUpdate","onCardDelete","cardsForDisplay","map","url","CustomSlider","defaultValue","orientation","step","valueLabelDisplay","useState","sliderValue","setSliderValue","Slider","newValue","CardsPage","Routes","exact","render","Header","logoutHandler","useCallback","nav","menu","button","Main","App","Boolean","window","hostname","match","rootReducer","combineReducers","action","newPassword","login","profile","filter","p","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.ad130989.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"LoginForm_loginBlock__3Hd_A\",\"inputBlock\":\"LoginForm_inputBlock__xysX4\",\"checkboxBlock\":\"LoginForm_checkboxBlock__1tfzN\",\"link\":\"LoginForm_link__FsZ_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3TPoP\",\"menu\":\"Header_menu__65jxK\",\"button\":\"Header_button__287bi\",\"item\":\"Header_item__2qKv2\",\"activeLick\":\"Header_activeLick__1cFc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__2pNSR\"};","module.exports = __webpack_public_path__ + \"static/media/loader.b31e4952.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1VY1m\"};","module.exports = __webpack_public_path__ + \"static/media/Spin-1s.62e138ae.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyTable\":\"PacksPage_bodyTable__1mOYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"Cards_buttonContainer__2Bv5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Slider_container__31_Pu\"};","// export const BACK_URL = 'http://localhost:7542/2.0/';//for developers\r\n// export const BACK_URL = 'https://github.com/IgnatZakalinsky/cards-nya-back-2-0/';//alpha release\r\nexport const BACK_URL = 'https://neko-back.herokuapp.com/2.0';//alpha release\r\n","import axios from 'axios'\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instanse.post<UserType>('auth/login', data)\r\n    },\r\n    logout() {\r\n        return instanse.delete<LogoutParamsType>('auth/me')\r\n    },\r\n    me() {\r\n        return instanse.post<UserType>('auth/me')\r\n    }\r\n};\r\n\r\n// types for auth\r\nexport type LogoutParamsType = {\r\n    info: string\r\n    error: string\r\n}\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type UserType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number, // количество колод\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n    error: string,\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI, LoginParamsType, UserType} from '../l3-dal/cards-api';\r\nimport {setAppStatusAC} from '../../../../n1-main/m2-bll/app-reducer';\r\n\r\nconst SET_IS_LOGGED_IN = 'login/SET_IS_LOGGED_IN';\r\nconst SET_USER = 'login/SET_USER';\r\nconst SET_ERROR = 'login/SET-ERROR';\r\n\r\nconst initialState = {\r\n    user: {\r\n        // _id: '',\r\n        // email: '',\r\n        // name: '',\r\n        // avatar: '',\r\n        // publicCardPacksCount: 0, // количество колод\r\n        // created: new Date(),\r\n        // updated: new Date(),\r\n        // isAdmin: false,\r\n        // verified: false, // подтвердил ли почту\r\n        // rememberMe: false,\r\n        // error: '',\r\n    },\r\n    isLoggedIn: false,\r\n    error: null as string | null,\r\n};\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.value};\r\n        case SET_USER:\r\n            return {...state, user: {...action.user}};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setIsLoginInAC = (value: boolean) =>\r\n    ({type: SET_IS_LOGGED_IN, value} as const);\r\nexport const setUserAC = (user: UserType) =>\r\n    ({type: SET_USER, user} as const);\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: SET_ERROR, error} as const);\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n            if (res.data) {\r\n                dispatch(setUserAC(res.data));\r\n                dispatch(setIsLoginInAC(true));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            } else {\r\n                dispatch(setAppErrorAC('error'));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setAppErrorAC(e.response ? (e.response.data.error) : (e.message + ', more details in the console')))\r\n            dispatch(setAppStatusAC('succeeded'));\r\n        })\r\n};\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if(res.data) {\r\n                dispatch(setIsLoginInAC(false));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            } else {\r\n                dispatch(setAppErrorAC('error'));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            }\r\n        })\r\n};\r\n\r\n\r\n// types\r\nexport type AuthInitialStateType = typeof initialState\r\ntype ActionsType = ReturnType<typeof setIsLoginInAC>\r\n    | ReturnType<typeof setUserAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../../n2-faetures/f1-auth/a1-login/l3-dal/cards-api';\r\nimport {setIsLoginInAC, setUserAC} from '../../n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer';\r\n\r\nconst SET_STATUS = 'APP/SET-STATUS';\r\nconst SET_ERROR = 'APP/SET-ERROR';\r\nconst SET_IS_INITIALIZED = 'APP/SET-IS-INITIALIZED';\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n        case SET_ERROR:\r\n            return {...state, error: action.error};\r\n        case SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: SET_STATUS, status} as const);\r\nexport const setAppErrorAC = (error: string | null) => ({type: SET_ERROR, error} as const);\r\nexport const setAppIsInitializedAC = (isInitialized: boolean) => ({type: SET_IS_INITIALIZED, isInitialized} as const);\r\n\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    authAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setUserAC(res.data));\r\n                dispatch(setIsLoginInAC(true));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            } else {\r\n                dispatch(setIsLoginInAC(false));\r\n                dispatch(setAppStatusAC('succeeded'));\r\n            }\r\n            dispatch(setAppIsInitializedAC( true))\r\n            dispatch(setAppStatusAC('succeeded'));\r\n        })\r\n        .catch(() => {\r\n            dispatch(setAppStatusAC('succeeded'));\r\n        })\r\n\r\n};\r\n\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = typeof initialState\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedActionType = ReturnType<typeof setAppIsInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppStatusActionType\r\n    | SetAppErrorActionType\r\n    | SetIsInitializedActionType\r\n\r\n\r\n","import styles from './Preloader.module.css';\r\nimport preloader from '../../assets/images//loader.svg';\r\nimport React from 'react';\r\n\r\nexport type PreloaderPropsType = {}\r\n\r\nexport const Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.loader}>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {initializeAppTC, RequestStatusType} from '../../m2-bll/app-reducer';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport styles from './Profile.module.css'\r\n\r\nexport const Profile = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\r\n    let user = useSelector<AppRootStateType, any>(state => state.auth.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [dispatch]);\r\n\r\n\r\n    if (status === 'idle' || status === 'loading') {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Profile</h1>\r\n            <div>email: {user.email} </div>\r\n            <div>token: {user.token}</div>\r\n            <div>publicCardPacksCount: {user.publicCardPacksCount}</div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n","import React from 'react'\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../../../n1-main/m2-bll/store';\r\nimport {loginTC} from '../../l2-bll/auth-reducer';\r\nimport {Button, Checkbox, FormControl, FormControlLabel, FormGroup, Grid, TextField} from '@material-ui/core';\r\nimport style from './LoginForm.module.css';\r\nimport {RECOVER_PASSWORD, REGISTRATION} from '../../../../../n1-main/m1-ui/routes/Routes';\r\nimport styles from '../../../../../n1-main/m1-ui/header/Header.module.css';\r\nimport {RequestStatusType} from '../../../../../n1-main/m2-bll/app-reducer';\r\nimport {Preloader} from '../../../../../n1-main/m1-ui/common/Preloader/Preloader';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.auth.error);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length <= 6) {\r\n                errors.password = 'password must be more than 6 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        },\r\n    });\r\n\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            {error && <div style={{color: 'red'}}>{error.toString()}</div>}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                checked={formik.values.rememberMe}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n            <div className={style.link}>\r\n                <NavLink to={RECOVER_PASSWORD} activeClassName={styles.activeLick}>fogot fassword?</NavLink>\r\n            </div>\r\n            <div className={style.link}>\r\n                <NavLink to={REGISTRATION} activeClassName={styles.activeLick}>register</NavLink>\r\n            </div>\r\n        </Grid>\r\n    </Grid>\r\n};\r\n","import React from 'react';\r\nimport {LoginForm} from './LoginForm';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../../../n1-main/m2-bll/store';\r\nimport {RequestStatusType} from '../../../../../n1-main/m2-bll/app-reducer';\r\nimport {Preloader} from '../../../../../n1-main/m1-ui/common/Preloader/Preloader';\r\nimport {Login} from './Login';\r\n\r\nexport const LoginFormContainer = React.memo(() => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*<LoginForm/>*/}\r\n            <Login/>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport {LoginFormContainer} from './LoginForm/LoginFormContainer';\r\n\r\nexport const LoginPage = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <LoginFormContainer/>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport {LoginPage} from '../../../n2-faetures/f1-auth/a1-login/l1-ui/LoginPage';\r\n\r\nexport const Login = React.memo(() => {\r\n    return (\r\n        <div>\r\n           <h1>Login</h1>\r\n            <LoginPage/>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const RegistrationApi = {\r\n    register(email: string, password: string) {\r\n        return instance.post(`auth/register`, {\r\n            email,\r\n            password,\r\n        });\r\n    },\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RegistrationApi} from \"../r3-dal/cards-reduser-api\";\r\n\r\nconst REGISTER: 'REGISTER' = 'REGISTER';\r\nconst SET_ERROR: 'SET_ERROR' = 'SET_ERROR';\r\nconst SET_FETCHING: 'SET_FETCHING' = 'SET_FETCHING';\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    isError: false,\r\n    isFetching: false,\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                isRegistered: action.isRegistered,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.isError,\r\n            };\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const registrationAC = (isRegistered: boolean) => ({type: REGISTER, isRegistered} as const);\r\nconst setErrorAC = (isError: boolean) => ({type: SET_ERROR, isError} as const);\r\nconst setFetchingAC = (isFetching: boolean) => ({type: SET_FETCHING, isFetching} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof registrationAC | typeof setErrorAC | typeof setFetchingAC>;\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    dispatch(setFetchingAC(true));\r\n    RegistrationApi.register(email, password).then(res => {\r\n        dispatch(registrationAC(true));\r\n        dispatch(setFetchingAC(false));\r\n\r\n    }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n","import React from 'react';\r\n\r\nimport preloader from \"./Spin-1s.svg\";\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return <div>\r\n        <img src={preloader} alt={'preloader'}/>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {registerTC} from \"../r2-bll/register-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Preloader} from \"./Preloader/Preloader\";\r\nimport {AppRootStateType} from \"../../../../n1-main/m2-bll/store\";\r\n\r\nconst validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    } else if (values.password.length <= 3) {\r\n        errors.password = 'Must be at least 3 characters';\r\n    } else if (values.password.length > 100) {\r\n        errors.password = 'Must be not more than 100 characters';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\n\r\n\r\nexport const Registration = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector<AppRootStateType>(state => state.registration.isError);\r\n    const isRegistered = useSelector<AppRootStateType>(state => state.registration.isRegistered);\r\n    const isFetching = useSelector<AppRootStateType>(state => state.registration.isFetching);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            const {email, password} = values;\r\n            dispatch(registerTC(email, password));\r\n        },\r\n    });\r\n\r\n    if(isFetching && !isRegistered && !isError){\r\n        return <Preloader/>;\r\n    }\r\n    if(isError && !isFetching) {\r\n        return <div>Error!</div>;\r\n    }\r\n\r\n    if(isRegistered && !isFetching) {\r\n        return <Redirect to={'login'}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <ul>\r\n                    <li><input\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                    /> <label htmlFor=\"email\">Email Address</label>\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>{formik.errors.email}</div>\r\n                        ) : null}\r\n                    </li>\r\n                    <li><input\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.password}\r\n                    /> <label htmlFor=\"password\">Password</label>\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div>{formik.errors.password}</div>\r\n                        ) : null}\r\n                    </li>\r\n                </ul>\r\n                <button type=\"submit\" disabled={!!isFetching}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const RecoverApi = {\r\n    recover(email: string) {\r\n        return instance.post(`auth/forgot`, {\r\n            email,\r\n            from: `test-front-admin <ai73a@yandex.by>`,\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                     password recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>\r\n                     link</a></div>`,\r\n        });\r\n    },\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RecoverApi} from \"../rec3-dal/recoveryApi\";\r\n\r\nconst SET_ACCEPTED: 'recover-password/SET_ACCEPTED' = 'recover-password/SET_ACCEPTED';\r\nconst SET_ERROR: 'recover-password/SET_ERROR' = 'recover-password/SET_ERROR';\r\nconst SET_FETCHING: 'recover-password/SET_FETCHING' = 'recover-password/SET_FETCHING';\r\n\r\nconst initialState = {\r\n    isAccepted: false,\r\n    isError: false,\r\n    isFetching: false,\r\n};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_ACCEPTED:\r\n            return {\r\n                ...state,\r\n                isAccepted: action.isAccepted,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.isError,\r\n            };\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setAcceptedAC = (isAccepted: boolean) => ({type: SET_ACCEPTED, isAccepted} as const);\r\nconst setErrorAC = (isError: boolean) => ({type: SET_ERROR, isError} as const);\r\nconst setFetchingAC = (isFetching: boolean) => ({type: SET_FETCHING, isFetching} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setAcceptedAC | typeof setErrorAC | typeof setFetchingAC>;\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setFetchingAC(true));\r\n    RecoverApi.recover(email).then(res => {\r\n        dispatch(setAcceptedAC(true));\r\n        dispatch(setFetchingAC(false));\r\n\r\n    }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n","import React, {memo} from \"react\";\r\n\r\nimport styles from './RecoverPasswordPage.module.css';\r\nimport {useFormik} from \"formik\";\r\nimport {registerTC} from \"../../../a2-register/r2-bll/register-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../n1-main/m2-bll/store\";\r\nimport {recoverTC} from \"../../rec2-bll/recover-password-reducer\";\r\nimport {Preloader} from \"../../../a2-register/r1-ui/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst validate = (values: any) => {\r\n    const errors: any = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    return errors;\r\n};\r\n\r\n\r\nexport const RecoverPasswordPage = memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isError = useSelector<AppRootStateType>(state => state.recoverPassword.isError);\r\n    const isFetching = useSelector<AppRootStateType>(state => state.recoverPassword.isFetching);\r\n    const isAccepted = useSelector<AppRootStateType>(state => state.recoverPassword.isAccepted);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            const {email} = values;\r\n            dispatch(recoverTC(email));\r\n        },\r\n    });\r\n\r\n    if(isFetching && !isAccepted && !isError){\r\n        return <Preloader/>;\r\n    }\r\n    if(isError && !isFetching) {\r\n        return <div>Error!</div>;\r\n    }\r\n\r\n    if(isAccepted && !isFetching) {\r\n        return <Redirect to={'newPass'}/>;\r\n    }\r\n\r\n        return (\r\n            <>\r\n                <h1>Recover Password</h1>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <ul>\r\n                        <li><input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}\r\n                        /> <label htmlFor=\"email\">Email Address</label>\r\n                            {formik.touched.email && formik.errors.email ? (\r\n                                <div>{formik.errors.email}</div>\r\n                            ) : null}\r\n                        </li>\r\n                    </ul>\r\n                    <button type=\"submit\" disabled={!!isFetching}>Submit</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n)\r\n","import React from 'react';\r\n\r\nexport const NewPass = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <h1>NewPassword</h1>\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\nimport {CreatePackType, DeletePackType, PacksInitialStateType, PackType, UpdatePackType} from '../p2-bll/packs-reducer';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const packsAPI = {\r\n    getPacks(pageCount: number = 50) {\r\n        return instanse.get<PacksInitialStateType>(`cards/pack?pageCount=${pageCount}`)\r\n            .then(res => res.data.cardPacks)\r\n    },\r\n    createPack(cardsPack: {name: string}) {\r\n        return instanse.post<CreatePackType>(`cards/pack`, {cardsPack})\r\n            .then(res => res.data.newCardsPack)\r\n    },\r\n    deletePack(id:string) {\r\n        return instanse.delete<DeletePackType>(`cards/pack?id=${id}`)\r\n            .then(res => res.data.deletedCardsPack)\r\n    },\r\n    updatePack(cardsPack: {_id: string, name: string}) {\r\n        return instanse.put<UpdatePackType>(`cards/pack`, {cardsPack})\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","import {Dispatch} from 'redux';\r\nimport {packsAPI} from '../p3-dal/packs-api';\r\n\r\nconst SET_PACKS = 'SET_PACKS';\r\nconst ADD_PACK = 'ADD_PACK';\r\nconst DELETE_PACK = 'DELETE_PACK';\r\nconst UPDATE_PACK = 'UPDATE_PACK';\r\n\r\nconst initialState: PacksInitialStateType = {\r\n    cardPacks: [\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-27T11:12:49.486Z',\r\n            grade: 0,\r\n            more_id: '5f8db2d0842c1e00044adcdf',\r\n            name: 'new pack',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-27T11:12:49.486Z',\r\n            user_id: '5f8db2d0842c1e00044adcdf',\r\n            user_name: 'konstantinkspb@gmail.com',\r\n            __v: 0,\r\n            _id: '5f9800b17247822b58a8cad1'\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-27T11:12:47.033Z',\r\n            grade: 0,\r\n            more_id: '5f8db2d0842c1e00044adcdf',\r\n            name: 'new pack',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-27T11:12:47.033Z',\r\n            user_id: '5f8db2d0842c1e00044adcdf',\r\n            user_name: 'konstantinkspb@gmail.com',\r\n            __v: 0,\r\n            _id: '5f9800af7247822b58a8cad0',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-27T11:12:44.512Z',\r\n            grade: 0,\r\n            more_id: '5f8db2d0842c1e00044adcdf',\r\n            name: 'new pack',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-27T11:12:44.512Z',\r\n            user_id: '5f8db2d0842c1e00044adcdf',\r\n            user_name: 'konstantinkspb@gmail.com',\r\n            __v: 0,\r\n            _id: '5f9800ac7247822b58a8cacf',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-26T23:11:54.501Z',\r\n            deckCover: '',\r\n            grade: 0,\r\n            more_id: '5eecf82a3ed8f700042f1186',\r\n            name: 'update new pack 2.0',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-26T23:12:06.637Z',\r\n            user_id: '5eecf82a3ed8f700042f1186',\r\n            user_name: 'nya',\r\n            __v: 0,\r\n            _id: '5f9757ba080b9c0004e8c78b',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-26T22:57:27.964Z',\r\n            deckCover: null,\r\n            grade: 0,\r\n            more_id: '5f8aed62122a4300049db62a',\r\n            name: 'new checked name',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-26T22:57:30.609Z',\r\n            user_id: '5f8aed62122a4300049db62a',\r\n            user_name: 'alexeisamuta@gmail.com',\r\n            __v: 0,\r\n            _id: '5f975457080b9c0004e8c78a',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-26T20:31:43.957Z',\r\n            grade: 0,\r\n            more_id: '5f8a1b993a8b540004322cc8',\r\n            name: 'no Name',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-26T20:31:43.957Z',\r\n            user_id: '5f8a1b993a8b540004322cc8',\r\n            user_name: 'kachanovski03@gmail.com',\r\n            __v: 0,\r\n            _id: '5f97322f080b9c0004e8c770',\r\n        },\r\n        {\r\n            cardsCount: 0,\r\n            created: '2020-10-23T17:09:47.044Z',\r\n            grade: 0,\r\n            more_id: '5f6756d7b7d4170004385d85',\r\n            name: '2',\r\n            path: '/def',\r\n            private: false,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'pack',\r\n            updated: '2020-10-23T17:09:47.044Z',\r\n            user_id: '5f6756d7b7d4170004385d85',\r\n            user_name: 'Vik',\r\n            __v: 0,\r\n            _id: '5f930e5b5cea1f1aa027b9ea',\r\n        }\r\n    ],\r\n    cardPacksTotalCount: 693,\r\n    maxCardsCount: 16,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 100,\r\n    token: 'fac9dcd0-1847-11eb-8597-0b97c01a13e4',\r\n    tokenDeathTime: 1603809099421,\r\n};\r\n\r\nexport const packsReduser = (state: PacksInitialStateType = initialState, action: ActionsType): PacksInitialStateType => {\r\n    switch (action.type) {\r\n        case SET_PACKS: {\r\n            return {\r\n                ...state, cardPacks: [...action.packs]\r\n            }\r\n        }\r\n        case ADD_PACK: {\r\n            return {\r\n                ...state, cardPacks: [action.pack, ...state.cardPacks]\r\n            }\r\n        }\r\n        case DELETE_PACK: {\r\n            return {\r\n                ...state, cardPacks: state.cardPacks.filter(p => p._id !== action.id)\r\n            }\r\n        }\r\n        case UPDATE_PACK: {\r\n            return {\r\n                ...state, cardPacks: state.cardPacks.map(pack => pack._id === action.id ? {...pack, name: action.name} : pack)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actionsCreators\r\nexport const setPacksAC = (packs: Array<PackType>) => ({type: SET_PACKS, packs} as const);\r\nexport const addPackAC = (pack: PackType) => ({type: ADD_PACK, pack} as const);\r\nexport const deletePackAC = (id: string) => ({type: DELETE_PACK, id} as const);\r\nexport const updatePackAC = (id: string, name: string) => ({type: UPDATE_PACK, id, name} as const);\r\n\r\n// thunk\r\nexport const requestPacksT = () => (dispatch: Dispatch) => {\r\n    packsAPI.getPacks()\r\n        .then(data => {\r\n            dispatch(setPacksAC(data))\r\n        }).catch(() => console.log('error'))\r\n};\r\nexport const addPackT = (cardsPack: { name: string }) => (dispatch: Dispatch) => {\r\n    packsAPI.createPack(cardsPack)\r\n        .then(data => {\r\n            dispatch(addPackAC(data))\r\n        })\r\n};\r\nexport const deletePackT = (id: string) => (dispatch: Dispatch) => {\r\n    packsAPI.deletePack(id)\r\n        .then(() => {\r\n            dispatch(deletePackAC(id))\r\n        }).catch(() => console.log('delete error'))\r\n};\r\nexport const updatePackT = (cardsPack: {_id: string, name: string}) => (dispatch: Dispatch) => {\r\n    packsAPI.updatePack(cardsPack)\r\n        .then(() => {\r\n            dispatch(updatePackAC(cardsPack._id, cardsPack.name))\r\n        }).catch(() => console.log('update error'))\r\n};\r\n\r\nexport type PackType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n    deckCover?: string | null,\r\n}\r\nexport type CreatePackType = {\r\n    newCardsPack: PackType,\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type DeletePackType = {\r\n    deletedCardsPack: PackType,\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type UpdatePackType = {\r\n    updatedCardsPack: PackType,\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type PacksInitialStateType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\ntype  ActionsType = ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof addPackAC>\r\n    | ReturnType<typeof deletePackAC>\r\n    | ReturnType<typeof updatePackAC>\r\n\r\n\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {PackType} from '../p2-bll/packs-reducer';\r\n\r\ntype PacksTablePropsType = {\r\n    packs: Array<PackType>\r\n    addPack: () => void\r\n    deletePack: (pack: PackType | Array<PackType>) => void\r\n    updatePacks: (pack: PackType | Array<PackType>) => void\r\n    goToCards: (pack: PackType | Array<PackType>) => void\r\n}\r\n\r\nexport const PacksTable: React.FC<PacksTablePropsType> = ({packs, addPack, deletePack, goToCards, updatePacks}) => {\r\n\r\n\r\n    return (\r\n        <MaterialTable\r\n            title=\"CardPacs\"\r\n            columns={[\r\n                {\r\n                    title: 'Name', field: 'name',\r\n                    headerStyle: {\r\n                        width: '10%'\r\n                    },\r\n                    cellStyle: {\r\n                        width: '10%'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'CardsCount', field: 'cardsCount', type: 'numeric',\r\n                    headerStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                    cellStyle: {\r\n                        textAlign: 'center',\r\n                        width: '20%'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Updated', field: 'updated',\r\n                    headerStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                    cellStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Url', field: 'url', type: 'numeric',\r\n                    headerStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                    cellStyle: {\r\n                        textAlign: 'center',\r\n                        width: '30%'\r\n                    },\r\n                },\r\n            ]}\r\n            data={packs}\r\n            actions={[\r\n                {\r\n                    icon: 'add',\r\n                    tooltip: 'Add Pack',\r\n                    isFreeAction: true,\r\n                    onClick: (event) => addPack()\r\n                },\r\n                {\r\n                    icon: 'delete',\r\n                    tooltip: 'Delete pack',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        deletePack(data)\r\n                    }\r\n                },\r\n                {\r\n                    icon: 'update',\r\n                    tooltip: 'Update pack',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        updatePacks(data)\r\n                    }\r\n                },\r\n                {\r\n                    icon: 'forum',\r\n                    tooltip: 'Cards',\r\n                    onClick: (event, data: PackType | Array<PackType>) => {\r\n                        goToCards(data)\r\n                    }\r\n                },\r\n            ]}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: '#01579b',\r\n                    color: '#FFF',\r\n                },\r\n\r\n                actionsColumnIndex: -1\r\n            }}\r\n            style={{\r\n                width: '95%',\r\n                margin: '20px auto'\r\n            }}\r\n        />\r\n    )\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPackT, deletePackT, PackType, requestPacksT, updatePackT} from '../p2-bll/packs-reducer';\r\nimport {AppRootStateType} from '../../../../n1-main/m2-bll/store';\r\nimport {CARDS} from '../../../../n1-main/m1-ui/routes/Routes';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {PacksTable} from './PacksTable';\r\n\r\nexport const PacksContainer = () => {\r\n\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.cardPacks);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(requestPacksT());\r\n    }, [dispatch]);\r\n\r\n    const goToCards = (pack: PackType | Array<PackType>) => {\r\n        !Array.isArray(pack) && history.push(CARDS + '/' + pack._id)\r\n    };\r\n\r\n    const addPack = () => {\r\n        dispatch(addPackT({name: 'NEW PACK'}))\r\n    };\r\n\r\n    const deletePack = (pack: PackType | Array<PackType>) => {\r\n        if(!Array.isArray(pack)) {\r\n            dispatch(deletePackT(pack._id))\r\n        }\r\n    };\r\n\r\n    const updatePacks = (pack: PackType | Array<PackType>) => {\r\n        if(!Array.isArray(pack)) {\r\n            dispatch(updatePackT({_id: pack._id, name: 'GOOD CARDS'}));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PacksTable packs={packs} addPack={addPack}\r\n                    deletePack={deletePack} goToCards={goToCards}\r\n                    updatePacks={updatePacks}/>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport styles from './PacksPage.module.css'\r\nimport {PacksContainer} from '../../../n2-faetures/f2-cardPacks/c1-packs/p1-ui/PacksContainer';\r\n\r\nexport const PacksPage = () => {\r\n    return (\r\n        <div>\r\n            <div>PacksPage</div>\r\n            <div className={styles.bodyTable}>\r\n                <PacksContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import axios from 'axios';\r\nimport {BACK_URL} from '../../../../n0-config/config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: BACK_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const CardsApi = {\r\n    getCards(cardsPack_id: string, cardAnswer?: string, cardQuestion?: string, min?: number,\r\n             max?: number, shortCards?: string, grade?: number, page?: number, pageCount?: number) {\r\n        return instance.get(`cards/card`, {\r\n            params: {\r\n                cardsPack_id,\r\n                cardAnswer,\r\n                cardQuestion,\r\n                min,\r\n                max,\r\n                shortCards,\r\n                grade,\r\n                page,\r\n                pageCount,\r\n            }\r\n        });\r\n    },\r\n\r\n    addCard(cardsPack_id: string, question?: string, answer?: string, grade?: number,\r\n            shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n            questionVideo?: string, answerVideo?: string, type?: string) {\r\n        return instance.post(`cards/card`, {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer,\r\n                grade,\r\n                shots,\r\n                rating,\r\n                answerImg,\r\n                questionImg,\r\n                questionVideo,\r\n                answerVideo,\r\n                type,\r\n            }\r\n        })\r\n    },\r\n\r\n    deleteCard(id: string) {\r\n        return instance.delete('cards/card', {\r\n            params: {\r\n                id,\r\n            }\r\n        });\r\n    },\r\n\r\n    updateCard(id: string, question?: string, answer?: string, grade?: number,\r\n               shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n               questionVideo?: string, answerVideo?: string, type?: string, comments?: string) {\r\n        return instance.put('cards/card', {\r\n            card: {\r\n                _id: id,\r\n                question,\r\n                answer,\r\n                grade,\r\n                shots,\r\n                rating,\r\n                answerImg,\r\n                questionImg,\r\n                questionVideo,\r\n                answerVideo,\r\n                type,\r\n                comments,\r\n            }\r\n        })\r\n    }\r\n}\r\n","import {AnyAction, Dispatch} from \"redux\";\r\nimport {CardsApi} from \"../c3-dal/cards-api\";\r\n\r\nconst SET_CARDS: 'SET_CARDS' = 'SET_CARDS';\r\nconst ADD_CARD: 'ADD_CARD' = 'ADD_CARD';\r\nconst DELETE_CARD: 'DELETE_CARD' = 'DELETE_CARD';\r\nconst UPDATE_CARD: 'UPDATE_CARD' = 'UPDATE_CARD';\r\nconst SET_CARDS_PACK_ID: 'SET_CARDS_PACK_ID' = 'SET_CARDS_PACK_ID';\r\n\r\nconst SET_ERROR: 'SET_ERROR' = 'SET_ERROR';\r\nconst SET_FETCHING: 'SET_FETCHING' = 'SET_FETCHING';\r\n\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    user_id: string;\r\n    answer: string;\r\n    question: string\r\n    grade: number;\r\n    shots: number;\r\n    comments: string;\r\n    type: string;\r\n    rating: string;\r\n    more_id: string;\r\n    created: string;\r\n    updated: string;\r\n    __v: number;\r\n}\r\n\r\ntype CardForSendType = {\r\n    cardsPack_id: string;\r\n    question?: string;\r\n    answer?: string;\r\n    grade?: number;\r\n    shots?: number;\r\n    rating?: number;\r\n    answerImg?: string;\r\n    questionImg?: string;\r\n    questionVideo?: string;\r\n    answerVideo?: string;\r\n    type?: string;\r\n}\r\n\r\ntype CardForUpdateType = {\r\n    object: CardForSendType\r\n    comments: string;\r\n}\r\n\r\ntype InitialStateType = {\r\n    isError: boolean;\r\n    isFetching: boolean;\r\n    cardsPack_id: string;\r\n    cards: Array<CardType>;\r\n}\r\n\r\nconst initialState = {\r\n    isError: false,\r\n    isFetching: false,\r\n    cardsPack_id: '',\r\n    cards: [{\r\n        _id: '',\r\n        cardsPack_id: '',\r\n        user_id: '',\r\n        answer: '',\r\n        question: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        comments: '',\r\n        type: '',\r\n        rating: '',\r\n        more_id: '',\r\n        created: '',\r\n        updated: '',\r\n        __v: 0,\r\n    }]\r\n};\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: action.isError,\r\n            };\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        case ADD_CARD:\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state,\r\n            };\r\n        case DELETE_CARD:\r\n            return {\r\n                ...state,\r\n            };\r\n        case SET_CARDS_PACK_ID:\r\n            return {\r\n                ...state,\r\n                cardsPack_id: action.id,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setCardsAC = (cards: Array<CardType>) => ({type: SET_CARDS, cards} as const);\r\nconst addCardAC = (payload: CardForSendType) => ({type: ADD_CARD, payload} as const);\r\nconst deleteCardAC = (id: string) => ({type: DELETE_CARD, id} as const);\r\nconst updateCardAC = (payload: CardForUpdateType) => ({type: UPDATE_CARD, payload} as const);\r\nconst setCardsPackIdAC = (id: string) => ({type: SET_CARDS_PACK_ID, id} as const);\r\n\r\n\r\nconst setErrorAC = (isError: boolean) => ({type: SET_ERROR, isError} as const);\r\nconst setFetchingAC = (isFetching: boolean) => ({type: SET_FETCHING, isFetching} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setCardsAC | typeof setErrorAC | typeof setFetchingAC |\r\n    typeof addCardAC | typeof deleteCardAC | typeof updateCardAC | typeof setCardsPackIdAC> ;\r\n\r\nexport const setCardsTC = (cardsPack_id: string, cardAnswer?: string, cardQuestion?: string,\r\n                           min?: number, max?: number, shortCards?: string, grade?: number,\r\n                           page?: number, pageCount?: number\r\n) => (dispatch: Dispatch) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.getCards(cardsPack_id, cardAnswer, cardQuestion, min, max, shortCards, grade, page,\r\n        pageCount)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const addCardTC = (cardsPack_id: string, question?: string, answer?: string, grade?: number,\r\n                          shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n                          questionVideo?: string, answerVideo?: string, type?: string\r\n) => (dispatch: any, getState: any) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.addCard(cardsPack_id, question, answer, grade,\r\n        shots, rating, answerImg, questionImg,\r\n        questionVideo, answerVideo, type)\r\n        .then(res => {\r\n            dispatch(setCardsTC(getState().cards.cardsPack_id, undefined, undefined,\r\n                undefined, undefined, undefined, undefined, undefined,\r\n                20));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const deleteCardTC = (id: string) => (dispatch: any, getState: any) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(setCardsTC(getState().cards.cardsPack_id, undefined, undefined,\r\n                undefined, undefined, undefined, undefined, undefined,\r\n                20));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const updateCardTC = (id: string, question?: string, answer?: string, grade?: number,\r\n                             shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n                             questionVideo?: string, answerVideo?: string, type?: string, comments?: string\r\n) => (dispatch: any, getState: any) => {\r\n    dispatch(setFetchingAC(true));\r\n    CardsApi.updateCard(id, question, answer, grade,\r\n        shots, rating, answerImg, questionImg,\r\n        questionVideo, answerVideo, type, comments)\r\n        .then(res => {\r\n            dispatch(setCardsTC(getState().cards.cardsPack_id));\r\n            dispatch(setFetchingAC(false));\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(true))\r\n        dispatch(setFetchingAC(false));\r\n    });\r\n}\r\n\r\nexport const setCardsPackIdTC = (cardsPackId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setCardsPackIdAC(cardsPackId));\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nimport {AppRootStateType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {addCardTC, CardType, deleteCardTC, setCardsPackIdTC, setCardsTC, updateCardTC} from \"../c2-bll/cards-reduser\";\r\n\r\ntype DisplayCardType = {\r\n    _id: string;\r\n    question: string;\r\n    answer: string;\r\n    grade: number;\r\n    updated: string;\r\n    url: string;\r\n}\r\n\r\nexport const CardsTable = () => {\r\n    const {buttonContainer} = styles;\r\n\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards);\r\n    const cardsPack_id = useSelector<AppRootStateType, string>(state => state.cards.cardsPack_id);\r\n    const dispatch = useDispatch();\r\n\r\n    const {location} = useHistory();\r\n    const cardsPackIdParams = location.pathname.substring(7);\r\n\r\n    dispatch(setCardsPackIdTC(cardsPackIdParams));\r\n\r\n    const onCardAdd = (cardsPack_id: string, question?: string, answer?: string, grade?: number,\r\n                       shots?: number, rating?: number, answerImg?: string, questionImg?: string,\r\n                       questionVideo?: string, answerVideo?: string, type?: string) => {\r\n        dispatch(addCardTC(cardsPack_id, question, answer, grade, shots, rating, answerImg, questionImg,\r\n            questionVideo, answerVideo, type))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (cardsPack_id) {\r\n            dispatch(setCardsTC(cardsPack_id, undefined,\r\n                undefined, undefined, undefined, undefined, undefined, undefined, 20))\r\n        }\r\n    }, [dispatch]);\r\n\r\n\r\n    const onCardUpdate = (card: DisplayCardType | Array<DisplayCardType>): void => {\r\n        !Array.isArray(card) && dispatch(updateCardTC(card._id, `updated ${card.question}`, `updated ${card.answer}`, card.grade))\r\n    }\r\n\r\n    const onCardDelete = (card: DisplayCardType | Array<DisplayCardType>): void => {\r\n        !Array.isArray(card) && dispatch(deleteCardTC(card._id))\r\n    }\r\n\r\n\r\n\r\n    const cardsForDisplay: Array<DisplayCardType> = cards.map(({_id, question, answer, grade, updated}) => ({\r\n        _id, question,\r\n        answer, grade, updated, url: '',\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <MaterialTable\r\n                title=\"Cards\"\r\n                columns={[\r\n                    {title: 'Question', field: 'question', type: \"string\"},\r\n                    {title: 'Answer', field: 'answer'},\r\n                    {title: 'Grade', field: 'grade', type: \"numeric\"},\r\n                    {title: 'Updated', field: 'updated', type: 'numeric'},\r\n                    {title: 'Url', field: 'url', type: 'numeric'},\r\n                ]}\r\n                data={cardsForDisplay}\r\n                actions={[\r\n                    {\r\n                        icon: 'add',\r\n                        tooltip: 'Add Card',\r\n                        isFreeAction: true,\r\n                        onClick: (event) => onCardAdd(cardsPack_id)\r\n                    },\r\n                    {\r\n                        icon: 'delete',\r\n                        tooltip: 'Delete packs',\r\n                        onClick: (event, data: DisplayCardType | Array<DisplayCardType>) => onCardDelete(data)\r\n                    },\r\n                    {\r\n                        icon: 'update',\r\n                        tooltip: 'Update packs',\r\n                        onClick: (event, data: DisplayCardType | Array<DisplayCardType>) => onCardUpdate(data)\r\n                    },\r\n\r\n                ]}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: '#01579b',\r\n                        color: '#FFF',\r\n                        width: '90%'\r\n                    },\r\n                    actionsColumnIndex: -1\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, memo} from 'react';\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nimport styles from './Slider.module.css'\r\n\r\ntype PropsType = {\r\n    name: string;\r\n    defaultValue?: number | Array<number>;\r\n    disabled?: boolean;\r\n    min: number;\r\n    max: number;\r\n    orientation?: 'horizontal' | 'vertical';\r\n    step: number;\r\n    onChange: (value: number | number[]) => void;\r\n    valueLabelDisplay: 'on' | 'auto' | 'off';\r\n}\r\n\r\nexport const CustomSlider = memo((props: PropsType) => {\r\n    const {container} = styles;\r\n    const {defaultValue, disabled, max, min, orientation, step, onChange, name, valueLabelDisplay} = props;\r\n\r\n    const [sliderValue, setSliderValue] = useState(defaultValue);\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        setSliderValue(newValue);\r\n        onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={container}>\r\n            <p>{name}</p>\r\n            <Slider\r\n                value={sliderValue}\r\n                onChange={handleChange}\r\n                min={min}\r\n                max={max}\r\n                step={step}\r\n                disabled={disabled}\r\n                orientation={orientation}\r\n                valueLabelDisplay={valueLabelDisplay}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport stales from './CardsPage.module.css'\r\nimport {CardsTable} from '../../../n2-faetures/f2-cardPacks/c2-cards/c1-ui/Cards';\r\nimport {CustomSlider} from '../common/Cards/Slider/Slider';\r\n\r\nexport const CardsPage = () => {\r\n    return (\r\n        <>\r\n            <div>CardsPage</div>\r\n            <CustomSlider\r\n                name={'Cards slider'}\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                disabled={false}\r\n                defaultValue={[10, 20]}\r\n                onChange={(value) => console.log(value)}\r\n                valueLabelDisplay={'auto'}\r\n            />\r\n            <CardsTable/>\r\n        </>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {Profile} from '../profile/Profile';\r\nimport {Login} from '../login/Login';\r\nimport {Registration} from '../../../n2-faetures/f1-auth/a2-register/r1-ui/RegisterPage';\r\nimport {RecoverPasswordPage} from '../../../n2-faetures/f1-auth/a3-recovery/rec1-ui/RecoverPasswordPage/RecoverPasswordPage';\r\nimport {NewPass} from '../newPassword/NewPass';\r\nimport {PacksPage} from '../Packs/PacksPage';\r\nimport {CardsPage} from '../CardsPage/CardsPage';\r\n\r\nexport const PROFILE = '/';\r\nexport const LOGIN = '/login';\r\nexport const REGISTRATION = '/registration';\r\nexport const RECOVER_PASSWORD = '/recoverPassword';\r\nexport const NEW_PASS = '/newPass';\r\nexport const PACKS = '/packs';\r\nexport const CARDS = '/cards';\r\n\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Route exact path={PROFILE} render={() => <Profile/>}/>\r\n            <Route path={LOGIN} render={() => <Login/>}/>\r\n            <Route path={REGISTRATION} render={() => <Registration/>}/>\r\n            <Route path={RECOVER_PASSWORD} render={() => <RecoverPasswordPage/>}/>\r\n            <Route path={NEW_PASS} render={() => <NewPass/>}/>\r\n            <Route path={PACKS} render={() => <PacksPage/>}/>\r\n            <Route path={CARDS} render={() => <CardsPage/>}/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useCallback} from 'react';\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CARDS, LOGIN, NEW_PASS, PACKS, PROFILE, RECOVER_PASSWORD, REGISTRATION} from '../routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../m2-bll/store';\r\nimport {Button} from '@material-ui/core';\r\nimport { logoutTC } from '../../../n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer';\r\n\r\nexport const Header = () => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [isLoggedIn]);\r\n\r\n    return (\r\n        <div className={styles.nav}>\r\n            <div className={styles.menu}>\r\n\r\n                <div className={styles.button}>\r\n                    {isLoggedIn && <Button variant=\"contained\" color=\"primary\" onClick={logoutHandler}>Log out</Button>}\r\n                </div>\r\n\r\n                <div className={styles.item}>\r\n                    <NavLink exact to={PROFILE} activeClassName={styles.activeLick}>Profile</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={LOGIN} activeClassName={styles.activeLick}>Login</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={REGISTRATION} activeClassName={styles.activeLick}>Registration</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={RECOVER_PASSWORD} activeClassName={styles.activeLick}>RecoverPassword</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={NEW_PASS} activeClassName={styles.activeLick}>NewPass</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={PACKS} activeClassName={styles.activeLick}>PacksPage</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to={CARDS} activeClassName={styles.activeLick}>CardsPage</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport {Header} from '../header/Header';\r\nimport {Routes} from '../routes/Routes';\r\n\r\nexport const Main = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Main} from './main/Main';\r\n\r\ntype AppPropsType = {}\r\n\r\nexport const App: React.FC<AppPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <Main/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReduser = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PROFILE':\r\n            return {...state};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nexport const profileAC = () => ({type: 'PROFILE'} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof profileAC>\r\n","const initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_IS_LOGGET_IN':\r\n            return {...state};\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setIsLoggedInAC = () => ({type: 'SET_IS_LOGGET_IN'} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n","const initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState , action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_NEW_PASSWORD':\r\n            return {...state};\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\n// actions\r\nexport const newPassworddAC = () => ({type: 'SET_NEW_PASSWORD'} as const);\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof newPassworddAC>\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {profileReduser} from './profile-reducer';\r\nimport {loginReducer} from './login-reducer';\r\nimport {newPasswordReducer} from './newPassword-reducer';\r\nimport {registrationReducer} from '../../n2-faetures/f1-auth/a2-register/r2-bll/register-reducer';\r\nimport {recoverPasswordReducer} from '../../n2-faetures/f1-auth/a3-recovery/rec2-bll/recover-password-reducer';\r\nimport {authReducer} from '../../n2-faetures/f1-auth/a1-login/l2-bll/auth-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport { packsReduser } from '../../n2-faetures/f2-cardPacks/c1-packs/p2-bll/packs-reducer';\r\nimport {cardsReducer} from \"../../n2-faetures/f2-cardPacks/c2-cards/c2-bll/cards-reduser\";\r\n\r\nconst rootReducer = combineReducers({\r\n    registration: registrationReducer,\r\n    newPassword: newPasswordReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    login: loginReducer,\r\n    profile: profileReduser,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    cards: cardsReducer,\r\n    packs: packsReduser\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './n1-main/m1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './n1-main/m2-bll/store';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}